<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/11/2010 7:50:47 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="VISUALSTUDIO"
  DTS:CreatorName="VISUALSTUDIO\Installer"
  DTS:DTSID="{CE528248-E380-4EE3-8B34-7850E1CA3A29}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="14.0.0600.250"
  DTS:LocaleID="3081"
  DTS:ObjectName="EveryDataType_V1 6 2"
  DTS:PackageType="5"
  DTS:VersionBuild="39"
  DTS:VersionGUID="{E5AD3F95-AACA-4AB2-A99C-D4A3B1D07A7D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E9756F51-C22A-42AF-9713-4558B6482D62}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vOutput">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="SSIS.Pipeline.3"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{CCB4391B-971C-41A1-B7F6-58D2C0F66882}"
      DTS:ExecutableType="SSIS.Pipeline.3"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          BLOBTempStoragePath=""
          bufferTempStoragePath=""
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\Generate Every Data Type"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; Â© 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Executes a custom script."
              name="Generate Every Data Type"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="20">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_80a4778b2f804b2cab6083d213c67593.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_80a4778b2f804b2cab6083d213c67593.csproj")]
[assembly: AssemblyCopyright("Copyright @  2011")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        GeneratedDataBuffer.AddRow();
        GeneratedDataBuffer.ColumnBoolean = true;
        byte[] bytestream = new byte[50];
        using (MemoryStream stream = new MemoryStream())
        {
            using (BinaryWriter writer = new BinaryWriter(stream))
            {
                writer.Write("This is a test string which is 50 characters long");
                bytestream = stream.ToArray();
            }
        }
        GeneratedDataBuffer.Columnbytestream = bytestream;
        GeneratedDataBuffer.Columncurrency = 123.45M;
        GeneratedDataBuffer.Columndatabasedate = DateTime.Parse("2011-08-26");
        GeneratedDataBuffer.Columndatabasetime = TimeSpan.Zero; // TimeSpan.FromHours(0.0000002);
        GeneratedDataBuffer.Columndatabasetimestamp = DateTime.Parse("2011-08-26");
        GeneratedDataBuffer.Columndatabasetimestampwithrecision = DateTime.Parse("2011-08-26");
        GeneratedDataBuffer.Columndatabasetimestampwithtimezone = DateTimeOffset.Parse("2011-08-26 +1:00");
        GeneratedDataBuffer.Columndatabasetimewithprecision = TimeSpan.Zero;
        GeneratedDataBuffer.Columndate = DateTime.Parse("2011-08-26");
        GeneratedDataBuffer.Columndecimal = 123.45M;
        GeneratedDataBuffer.Columndoubleprecisionfloat = 123.45;
        GeneratedDataBuffer.Columneightbytesignedinteger = 12345;
        GeneratedDataBuffer.Columneightbyteunsignedinteger = 12345;
        GeneratedDataBuffer.Columnfiletimestamp = DateTime.Parse("2011-08-26");
        GeneratedDataBuffer.Columnfloat = 123.45F;
        GeneratedDataBuffer.Columnfourbytesignedinteger = 12345;
        GeneratedDataBuffer.Columnfourbyteunsignedinteger = 12345;
        GeneratedDataBuffer.Columnimage.AddBlobData(bytestream);
        GeneratedDataBuffer.Columnnullfourbytesignedinteger_IsNull = true;
        GeneratedDataBuffer.Columnnumeric = 123.45M;
        GeneratedDataBuffer.Columnsinglebytesignedinteger = 123;
        GeneratedDataBuffer.Columnsinglebyteunsignedinteger = 123;
        GeneratedDataBuffer.Columnstring = "This is a test string which is 50 characters long";
        GeneratedDataBuffer.Columntextstream.AddBlobData(bytestream);
        GeneratedDataBuffer.Columntwobytesignedinteger = 12345;
        GeneratedDataBuffer.Columntwobyteunsignedinteger = 12345;
        GeneratedDataBuffer.ColumnUnicodestring = "This is a test string which is 50 characters long";
        GeneratedDataBuffer.ColumnUnicodetextstream.AddBlobData(bytestream);
        GeneratedDataBuffer.Columnuniqueidentifier = new Guid("{21EC2020-3AEA-1069-A2DD-08002B30309D}");
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class GeneratedDataBuffer: ScriptBuffer

{
    public GeneratedDataBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Byte[] Columnbytestream
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Columnbytestream_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean ColumnBoolean
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ColumnBoolean_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Columncurrency
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Columncurrency_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime Columndatabasedate
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Columndatabasedate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Columnnullfourbytesignedinteger
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Columnnullfourbytesignedinteger_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Guid Columnuniqueidentifier
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Columnuniqueidentifier_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public BlobColumn ColumnUnicodetextstream
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[6]];
        }
    }
    public bool ColumnUnicodetextstream_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String ColumnUnicodestring
    {
        set
        {
            this[7] = value;
        }
    }
    public bool ColumnUnicodestring_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt16 Columntwobyteunsignedinteger
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Columntwobyteunsignedinteger_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int16 Columntwobytesignedinteger
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Columntwobytesignedinteger_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public BlobColumn Columntextstream
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[10]];
        }
    }
    public bool Columntextstream_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String Columnstring
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Columnstring_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Byte Columnsinglebyteunsignedinteger
    {
        set
        {
            this[12] = value;
        }
    }
    public bool Columnsinglebyteunsignedinteger_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public SByte Columnsinglebytesignedinteger
    {
        set
        {
            this[13] = value;
        }
    }
    public bool Columnsinglebytesignedinteger_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Columnnumeric
    {
        set
        {
            this[14] = value;
        }
    }
    public bool Columnnumeric_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public BlobColumn Columnimage
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[15]];
        }
    }
    public bool Columnimage_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    public UInt32 Columnfourbyteunsignedinteger
    {
        set
        {
            this[16] = value;
        }
    }
    public bool Columnfourbyteunsignedinteger_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Columnfourbytesignedinteger
    {
        set
        {
            this[17] = value;
        }
    }
    public bool Columnfourbytesignedinteger_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Columnfloat
    {
        set
        {
            this[18] = value;
        }
    }
    public bool Columnfloat_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime Columnfiletimestamp
    {
        set
        {
            this[19] = value;
        }
    }
    public bool Columnfiletimestamp_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 Columneightbyteunsignedinteger
    {
        set
        {
            this[20] = value;
        }
    }
    public bool Columneightbyteunsignedinteger_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 Columneightbytesignedinteger
    {
        set
        {
            this[21] = value;
        }
    }
    public bool Columneightbytesignedinteger_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Double Columndoubleprecisionfloat
    {
        set
        {
            this[22] = value;
        }
    }
    public bool Columndoubleprecisionfloat_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Columndecimal
    {
        set
        {
            this[23] = value;
        }
    }
    public bool Columndecimal_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime Columndate
    {
        set
        {
            this[24] = value;
        }
    }
    public bool Columndate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTimeOffset Columndatabasetimestampwithtimezone
    {
        set
        {
            this[25] = value;
        }
    }
    public bool Columndatabasetimestampwithtimezone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(25);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime Columndatabasetimestampwithrecision
    {
        set
        {
            this[26] = value;
        }
    }
    public bool Columndatabasetimestampwithrecision_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(26);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime Columndatabasetimestamp
    {
        set
        {
            this[27] = value;
        }
    }
    public bool Columndatabasetimestamp_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(27);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public TimeSpan Columndatabasetimewithprecision
    {
        set
        {
            this[28] = value;
        }
    }
    public bool Columndatabasetimewithprecision_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(28);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public TimeSpan Columndatabasetime
    {
        set
        {
            this[29] = value;
        }
    }
    public bool Columndatabasetime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(29);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public GeneratedDataBuffer GeneratedDataBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != GeneratedDataBuffer)
        {
            GeneratedDataBuffer.SetEndOfRowset();
            GeneratedDataBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"GeneratedData"))
            {
                GeneratedDataBuffer = new GeneratedDataBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_80a4778b2f804b2cab6083d213c67593.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_80a4778b2f804b2cab6083d213c67593.csproj</RootNamespace>
    <AssemblyName>SC_80a4778b2f804b2cab6083d213c67593.csproj</AssemblyName>
    <ProjectGuid>{3AF09ABD-C911-4D35-B812-95883C603326}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>sc_80a4778b2f804b2cab6083d213c67593</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_80a4778b2f804b2cab6083d213c67593</msb:DisplayName>
		<msb:ProjectId>{69623C0E-5969-4EDA-BA52-8BA37FE137E5}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_80a4778b2f804b2cab6083d213c67593.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_80a4778b2f804b2cab6083d213c67593.csproj.Properties.Settings.get_Default():SC_80a4778b2f804b2cab6083d213c67593.csproj.Properties.Sett" +
    "ings")]

namespace SC_80a4778b2f804b2cab6083d213c67593.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_80a4778b2f804b2cab6083d213c67593.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_80a4778b2f804b2cab6083d213c67593.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_80a4778b2f804b2cab6083d213c67593.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_80a4778b2f804b2cab6083d213c67593.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_80a4778b2f804b2cab6083d213c67593.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_80a4778b2f804b2cab6083d213c67593.csproj.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAAB
AIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsD
AAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAAB
AIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsD
AAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAAB
AIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAIsDAAABAN8MAAACALALAAADANEM
AAAEAMkJAAABAH8NAAABAH8NAAABAIsDCQCjCwEAEQCjCwYAGQCjCwoAKQCjCxAAMQCjCxAAOQCj
CxAAQQCjCxAASQCjCxAAUQCjCxAAWQCjCxAAYQCjCxAAwQCjCwYA2QCjCwYA+QCjCxUACQGjCwYA
aQCjCxsAaQC7CCUAaQBXCAEAEQGjCxAAaQAwCisAaQCXDC8AcQCyCDMAaQBQCDgAaQDTDQYAaQBA
DQYAaQBDDT0AsQCjCwYAsQAfAEUAsQCrDEwAuQCjCwYAsQBuAwYAsQB5AwYAyQCjCwYA0QCjC1sA
0QDKARAAyQDaDWIAeQGBAQYAgQCjC2cAiQCJAXAAqQC2CXYAoQCJAXoAmQA1AIAAkQCjCxAAgQG6
AIYAgQH1DY8A4QCjC5UAAQGjCwYALgALAK0BLgATALYBLgAbANUBLgAjAN4BLgArAA4CLgAzAA4C
LgA7AA4CLgBDAN4BLgBLABQCLgBTAA4CLgBbACsCwwBjAHMC4wBrAHMCAQF7AHMCqQdzANUByQdz
ANUBQQBSAAIAAQAHAD0ACAA/AAAAcAhLAQAAYwVQAQAA2whQAQAAvgVQAQAA5g1UAQAAQQhQAQAA
kwFZAQAA3wRQAQAAkApeAQAAwgZQAQAAfwtiAQAA4gdQAQAAhQhnAQAAfwVQAQAArwNsAQAAEwVQ
AQAAGQtwAQAAZwdQAQAAcQp0AQAAnAZQAQAAoQhnAQAAogVQAQAAxwNsAQAAMgVQAQAA9Qp4AQAA
PAdQAQAATwp8AQAAcwZQAQAATgBUAQAAYgRQAQAAiQBnAQAAewRQAQAAOguAAQAAjwdQAQAAtApe
AQAA7QZQAQAA/wyEAQAABAhQAQAA1wlZAQAAMQZQAQAAXAuIAQAAuAdQAQAA1AqMAQAAFAdQAQAA
Dw2QAQAAGwhQAQAACwRUAQAASgVQAQAAqgFZAQAA/QRQAQAAGAGUAQAAsARQAQAADAlZAQAA1wVQ
AQAA7wlZAQAAUAZQAQAANAmZAQAABgZQAQAA4ACZAQAAkgRQAQAAOwqeAQAAYQGjAQAAUw2oAQEA
AgADAAEAAwAFAAEABAAHAAEABQAJAAEABgALAAEABwANAAEACAAPAAEACQARAAEACgATAAEACwAV
AAEADAAXAAEADQAZAAIADgAbAAIADwAdAAEAEAAfAAEAEQAhAAEAEgAjAAEAEwAlAAEAFAAnAAEA
FQApAAIAFgArAAIAFwAtAAEAGAAvAAEAGQAxAAEAGgAzAAEAGwA1AAEAHAA3AAEAHQA5AAEAHgA7
AAEAHwA9AAIAIAA/AAIAIQBBAAEAIgBDAAEAIwBFAAEAJABHAAEAJQBJAAEAJgBLAAEAJwBNAAEA
KABPAAEAKQBRAAEAKgBTAAEAKwBVAAEALABXAAEALQBZAAEALgBbAAEALwBdAAEAMABfAAEAMQBh
AAEAMgBjAAEAMwBlAAEANABnAAEANQBpAAEANgBrAAEANwBtAAEAOABvAAEAOQBxAAEAOgBzAAEA
OwB1AAEAPAB3AAEAPQB5AAIATQB7AAIATgB9AAEATwB9AAIAUAB/AASAAAABAAAAAAAAAAAAAAAA
ANQDAAAEAAAAAAAAAAAAAACdAEEAAAAAAA0AAAAAAAAAAAAAAKYAiQ0AAAAADQAAAAAAAAAAAAAA
pgCmDQAAAAAEAAAAAAAAAAAAAACdAMQIAAAAAAAAAAABAAAA/gsAAAAAAAAAVUludDMyAFVJbnQ2
NABVSW50MTYAPE1vZHVsZT4AR2V0T3V0cHV0SUQAU3lzdGVtLklPAEFkZEJsb2JEYXRhAG1zY29y
bGliAHNldF9Db2x1bW5udW1lcmljAE1hcmtPdXRwdXRzRmluaXNoZWQAR3VpZABkZWZhdWx0SW5z
dGFuY2UAZ2V0X0NvbHVtbmltYWdlAElEaXNwb3NhYmxlAERvdWJsZQBSdW50aW1lVHlwZUhhbmRs
ZQBHZXRUeXBlRnJvbUhhbmRsZQBTaW5nbGUARGF0ZVRpbWUAc2V0X0NvbHVtbmRhdGFiYXNldGlt
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBzZXRfQ29sdW1uZGF0YWJhc2V0aW1l
c3RhbXB3aXRodGltZXpvbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1
bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBQYXJzZQBzZXRfQ29sdW1uZGF0
YWJhc2VkYXRlAHNldF9Db2x1bW5kYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAFdyaXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdn
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAU0J5dGUAdmFsdWUAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBzZXRfQ29sdW1uVW5pY29kZXN0cmluZwBzZXRfQ29sdW1uc3RyaW5nAFND
XzgwYTQ3NzhiMmY4MDRiMmNhYjYwODNkMjEzYzY3NTkzLmNzcHJvagBEZWNpbWFsAHNldF9Db2x1
bW5kZWNpbWFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ184MGE0Nzc4YjJmODA0YjJjYWI2MDgz
ZDIxM2M2NzU5My5jc3Byb2ouZGxsAHNldF9Db2x1bW5udW1lcmljX0lzTnVsbABnZXRfQ29sdW1u
aW1hZ2VfSXNOdWxsAHNldF9Db2x1bW5kYXRhYmFzZXRpbWVfSXNOdWxsAHNldF9Db2x1bW5kYXRh
YmFzZXRpbWVzdGFtcHdpdGh0aW1lem9uZV9Jc051bGwAc2V0X0NvbHVtbmRhdGFiYXNlZGF0ZV9J
c051bGwAc2V0X0NvbHVtbmRhdGVfSXNOdWxsAHNldF9Db2x1bW5Vbmljb2Rlc3RyaW5nX0lzTnVs
bABzZXRfQ29sdW1uc3RyaW5nX0lzTnVsbABzZXRfQ29sdW1uZGVjaW1hbF9Jc051bGwAc2V0X0Nv
bHVtbmJ5dGVzdHJlYW1fSXNOdWxsAGdldF9Db2x1bW5Vbmljb2RldGV4dHN0cmVhbV9Jc051bGwA
Z2V0X0NvbHVtbnRleHRzdHJlYW1fSXNOdWxsAHNldF9Db2x1bW5Cb29sZWFuX0lzTnVsbABzZXRf
Q29sdW1uZGF0YWJhc2V0aW1lc3RhbXB3aXRocmVjaXNpb25fSXNOdWxsAHNldF9Db2x1bW5kYXRh
YmFzZXRpbWV3aXRocHJlY2lzaW9uX0lzTnVsbABzZXRfQ29sdW1uZmlsZXRpbWVzdGFtcF9Jc051
bGwAc2V0X0NvbHVtbmRhdGFiYXNldGltZXN0YW1wX0lzTnVsbABzZXRfQ29sdW1uc2luZ2xlYnl0
ZXNpZ25lZGludGVnZXJfSXNOdWxsAHNldF9Db2x1bW50d29ieXRlc2lnbmVkaW50ZWdlcl9Jc051
bGwAc2V0X0NvbHVtbm51bGxmb3VyYnl0ZXNpZ25lZGludGVnZXJfSXNOdWxsAHNldF9Db2x1bW5m
b3VyYnl0ZXNpZ25lZGludGVnZXJfSXNOdWxsAHNldF9Db2x1bW5laWdodGJ5dGVzaWduZWRpbnRl
Z2VyX0lzTnVsbABzZXRfQ29sdW1uc2luZ2xlYnl0ZXVuc2lnbmVkaW50ZWdlcl9Jc051bGwAc2V0
X0NvbHVtbnR3b2J5dGV1bnNpZ25lZGludGVnZXJfSXNOdWxsAHNldF9Db2x1bW5mb3VyYnl0ZXVu
c2lnbmVkaW50ZWdlcl9Jc051bGwAc2V0X0NvbHVtbmVpZ2h0Ynl0ZXVuc2lnbmVkaW50ZWdlcl9J
c051bGwAc2V0X0NvbHVtbnVuaXF1ZWlkZW50aWZpZXJfSXNOdWxsAHNldF9Db2x1bW5mbG9hdF9J
c051bGwAc2V0X0NvbHVtbmRvdWJsZXByZWNpc2lvbmZsb2F0X0lzTnVsbABzZXRfQ29sdW1uY3Vy
cmVuY3lfSXNOdWxsAFNldE51bGwATWVtb3J5U3RyZWFtAHNldF9Db2x1bW5ieXRlc3RyZWFtAGdl
dF9Db2x1bW5Vbmljb2RldGV4dHN0cmVhbQBnZXRfQ29sdW1udGV4dHN0cmVhbQBnZXRfSXRlbQBz
ZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4Ac2V0X0NvbHVtbkJvb2xlYW4AVGltZVNwYW4AU2Ny
aXB0TWFpbgBCbG9iQ29sdW1uAHNldF9Db2x1bW5kYXRhYmFzZXRpbWVzdGFtcHdpdGhyZWNpc2lv
bgBzZXRfQ29sdW1uZGF0YWJhc2V0aW1ld2l0aHByZWNpc2lvbgBTeXN0ZW0uQ29uZmlndXJhdGlv
bgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9u
RXhjZXB0aW9uAEN1bHR1cmVJbmZvAFplcm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAAc2V0X0Nv
bHVtbmZpbGV0aW1lc3RhbXAAc2V0X0NvbHVtbmRhdGFiYXNldGltZXN0YW1wAEdlbmVyYXRlZERh
dGFCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIA
c2V0X0NvbHVtbnNpbmdsZWJ5dGVzaWduZWRpbnRlZ2VyAHNldF9Db2x1bW50d29ieXRlc2lnbmVk
aW50ZWdlcgBzZXRfQ29sdW1ubnVsbGZvdXJieXRlc2lnbmVkaW50ZWdlcgBzZXRfQ29sdW1uZm91
cmJ5dGVzaWduZWRpbnRlZ2VyAHNldF9Db2x1bW5laWdodGJ5dGVzaWduZWRpbnRlZ2VyAHNldF9D
b2x1bW5zaW5nbGVieXRldW5zaWduZWRpbnRlZ2VyAHNldF9Db2x1bW50d29ieXRldW5zaWduZWRp
bnRlZ2VyAHNldF9Db2x1bW5mb3VyYnl0ZXVuc2lnbmVkaW50ZWdlcgBzZXRfQ29sdW1uZWlnaHRi
eXRldW5zaWduZWRpbnRlZ2VyAHNldF9Db2x1bW51bmlxdWVpZGVudGlmaWVyAEJpbmFyeVdyaXRl
cgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGlt
ZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfODBhNDc3OGIyZjgwNGIyY2Fi
NjA4M2QyMTNjNjc1OTMuY3Nwcm9qLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTQ184MGE0Nzc4YjJmODA0YjJjYWI2MDgzZDIxM2M2NzU5My5jc3Byb2ouUHJv
cGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNl
dHRpbmdzAENvbm5lY3Rpb25zAEJ1ZmZlcnMARmluaXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRS
b3dzAHNldF9Db2x1bW5mbG9hdABzZXRfQ29sdW1uZG91YmxlcHJlY2lzaW9uZmxvYXQAT2JqZWN0
AERhdGVUaW1lT2Zmc2V0AFNldEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQA
UGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2Ny
aXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1lT3V0cHV0AEFkZFJvdwBU
b0FycmF5AHNldF9Db2x1bW5jdXJyZW5jeQBnZXRfQXNzZW1ibHkAAAAAgJtJAHMATgB1AGwAbAAg
AHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEA
bABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBv
AGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABtHAGUAbgBlAHIAYQB0AGUAZABEAGEAdABhAABj
VABoAGkAcwAgAGkAcwAgAGEAIAB0AGUAcwB0ACAAcwB0AHIAaQBuAGcAIAB3AGgAaQBjAGgAIABp
AHMAIAA1ADAAIABjAGgAYQByAGEAYwB0AGUAcgBzACAAbABvAG4AZwAAFTIAMAAxADEALQAwADgA
LQAyADYAASEyADAAMQAxAC0AMAA4AC0AMgA2ACAAKwAxADoAMAAwAAFNewAyADEARQBDADIAMAAy
ADAALQAzAEEARQBBAC0AMQAwADYAOQAtAEEAMgBEAEQALQAwADgAMAAwADIAQgAzADAAMwAwADkA
RAB9AAF/UwBDAF8AOAAwAGEANAA3ADcAOABiADIAZgA4ADAANABiADIAYwBhAGIANgAwADgAMwBk
ADIAMQAzAGMANgA3ADUAOQAzAC4AYwBzAHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4A
UgBlAHMAbwB1AHIAYwBlAHMAAATxavabvF5Jp2HpBbBT1zEABCABAQgDIAABBSABARERBCABAQ4F
IAEBEXkJIAMBEjkdCBI9BSACAQgcAwYSOQMGHQgEIAEcCAQgAQIIAyAAAgMHAQgGAAIIEj0OBSAB
HQgICAcDHQUSZRJpBiABARKAuQQgAB0FCCAFAQgICAIFBQABEUUOAwYRVQUAARFRDgUgAQEdBQgA
ARKAwRGAxQUgABKAyQcgAgEOEoDJCLd6XFYZNOCJCImEXc2AgMyRAwYSEAMGEhQDBhIIAwYSWQMG
EnEDBhJ1AwYSIAQgAQECBSABARFBBSABARFFBSABARFJBCAAEk0EIAEBBwQgAQEGBCABAQUEIAEB
BAQgAQEJBCABAQwEIAEBCwQgAQEKBCABAQ0FIAEBEVEFIAEBEVULIAQBCB0IHRI5Ej0FIAEBElkE
AAAScQQAABJ1BQABARJ1BAAAEiADAAABBCgAHQUDKAACBCgAEUEEKAARRQMoAAgEKAARSQQoABJN
AygADgMoAAcDKAAGAygABQMoAAQDKAAJAygADAMoAAsDKAAKAygADQQoABFRBCgAEVUECAAScQQI
ABJ1BAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAA
LwEAKlNDXzgwYTQ3NzhiMmY4MDRiMmNhYjYwODNkMjEzYzY3NTkzLmNzcHJvagAABQEAAAAAFgEA
EUNvcHlyaWdodCBAICAyMDExAABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZy
YW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQEAQAAALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADISQAA
AAAAAAAAAADiSQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1EkAAAAAAAAAAAAAAABfQ29yRGxs
TWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgA
AIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAALAQA
AAAAAAAAAAAALAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEA
AAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBG
AGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBIwD
AAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAGgDAAABADAAMAAwADAAMAA0AGIAMAAA
ABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUA
AAAAAAAAAAB+ACsAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AOAAw
AGEANAA3ADcAOABiADIAZgA4ADAANABiADIAYwBhAGIANgAwADgAMwBkADIAMQAzAGMANgA3ADUA
OQAzAC4AYwBzAHAAcgBvAGoAAAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAu
ADAALgAwAC4AMAAAAH4ALwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AOAAwAGEA
NAA3ADcAOABiADIAZgA4ADAANABiADIAYwBhAGIANgAwADgAMwBkADIAMQAzAGMANgA3ADUAOQAz
AC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcA
aAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQAxAAAAKgABAAEATABlAGcAYQBs
AFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAACGAC8AAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBDAF8AOAAwAGEANAA3ADcAOABiADIAZgA4ADAANABiADIAYwBhAGIANgAw
ADgAMwBkADIAMQAzAGMANgA3ADUAOQAzAC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAAdgArAAEA
UAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA4ADAAYQA0ADcANwA4AGIAMgBmADgAMAA0
AGIAMgBjAGEAYgA2ADAAOAAzAGQAMgAxADMAYwA2ADcANQA5ADMALgBjAHMAcAByAG8AagAAAAAA
NAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAAB
AEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAPQ5AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_80a4778b2f804b2cab6083d213c67593</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">9ab3699b9dcf7bf2638575fded1815b5</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">b2896d5746dd63c045f5ef0f6221e890240cb78e</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData]"
                  hasSideEffects="true"
                  name="GeneratedData">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]"
                      dataType="bytes"
                      length="50"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]"
                      name="Column_bytestream" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]"
                      dataType="bool"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]"
                      name="Column_Boolean" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]"
                      dataType="cy"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]"
                      name="Column_currency" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]"
                      dataType="dbDate"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]"
                      name="Column_databasedate" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]"
                      name="Column_nullfourbytesignedinteger" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]"
                      dataType="guid"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]"
                      name="Column_uniqueidentifier" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]"
                      dataType="nText"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]"
                      name="Column_Unicodetextstream" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]"
                      name="Column_Unicodestring" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]"
                      dataType="ui2"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]"
                      name="Column_twobyteunsignedinteger" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]"
                      dataType="i2"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]"
                      name="Column_twobytesignedinteger" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]"
                      codePage="1252"
                      dataType="text"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]"
                      name="Column_textstream" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]"
                      name="Column_string" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]"
                      dataType="ui1"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]"
                      name="Column_singlebyteunsignedinteger" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]"
                      dataType="i1"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]"
                      name="Column_singlebytesignedinteger" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]"
                      name="Column_numeric"
                      precision="18" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]"
                      dataType="image"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]"
                      name="Column_image" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]"
                      dataType="ui4"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]"
                      name="Column_fourbyteunsignedinteger" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]"
                      name="Column_fourbytesignedinteger" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]"
                      dataType="r4"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]"
                      name="Column_float" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]"
                      dataType="dateTime"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]"
                      name="Column_filetimestamp" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]"
                      name="Column_eightbyteunsignedinteger" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]"
                      dataType="i8"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]"
                      name="Column_eightbytesignedinteger" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]"
                      name="Column_doubleprecisionfloat" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]"
                      dataType="decimal"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]"
                      name="Column_decimal"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]"
                      dataType="date"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]"
                      name="Column_date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]"
                      dataType="dbTimeStampOffset"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]"
                      name="Column_databasetimestampwithtimezone" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]"
                      dataType="dbTimeStamp2"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]"
                      name="Column_databasetimestampwithrecision" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]"
                      name="Column_databasetimestamp" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]"
                      dataType="dbTime2"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]"
                      name="Column_databasetimewithprecision" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]"
                      dataType="dbTime"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]"
                      name="Column_databasetime" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Multicast"
              componentClassID="DTSTransform.Multicast.3"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates copies of a dataset."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Data Flow Task\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Data Flow Task\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 3]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Data Flow Task\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 4]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 4"
                  synchronousInputId="Package\Data Flow Task\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Data Flow Task\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 5]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 5"
                  synchronousInputId="Package\Data Flow Task\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Multiple Hash Safe Auto"
              componentClassID="DTS.ManagedComponentWrapper.3"
              description="Creates Multiple Hash's from selected input columns."
              localeId="3081"
              name="Multiple Hash Safe Auto"
              version="6">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Select the number of threads to use"
                  name="MultipleThreads"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+MultipleThread">1</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">MultipleHash</property>
                <property
                  dataType="System.Int32"
                  description="Select True to force Nulls and Empty Strings to be detected in Hash, False for earlier version compatability."
                  name="SafeNullHandling"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+SafeNullHandling">1</property>
                <property
                  dataType="System.Int32"
                  description="Select True to enable hashing of Milliseconds, False for earlier version compatability."
                  name="IncludeMillsecond"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+MillisecondHandling">0</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input]"
                  name="Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_bytestream]"
                      cachedDataType="bytes"
                      cachedLength="50"
                      cachedName="Column_bytestream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]"
                      name="Column_bytestream" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_Boolean]"
                      cachedDataType="bool"
                      cachedName="Column_Boolean"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]"
                      name="Column_Boolean" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_currency]"
                      cachedDataType="cy"
                      cachedName="Column_currency"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]"
                      name="Column_currency" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_databasedate]"
                      cachedDataType="dbDate"
                      cachedName="Column_databasedate"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]"
                      name="Column_databasedate" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_nullfourbytesignedinteger]"
                      cachedDataType="i4"
                      cachedName="Column_nullfourbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]"
                      name="Column_nullfourbytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_uniqueidentifier]"
                      cachedDataType="guid"
                      cachedName="Column_uniqueidentifier"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]"
                      name="Column_uniqueidentifier" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_Unicodetextstream]"
                      cachedDataType="nText"
                      cachedName="Column_Unicodetextstream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]"
                      name="Column_Unicodetextstream" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_Unicodestring]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Column_Unicodestring"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]"
                      name="Column_Unicodestring" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_twobyteunsignedinteger]"
                      cachedDataType="ui2"
                      cachedName="Column_twobyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]"
                      name="Column_twobyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_twobytesignedinteger]"
                      cachedDataType="i2"
                      cachedName="Column_twobytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]"
                      name="Column_twobytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_textstream]"
                      cachedCodepage="1252"
                      cachedDataType="text"
                      cachedName="Column_textstream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]"
                      name="Column_textstream" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_string]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Column_string"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]"
                      name="Column_string" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_singlebyteunsignedinteger]"
                      cachedDataType="ui1"
                      cachedName="Column_singlebyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]"
                      name="Column_singlebyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_singlebytesignedinteger]"
                      cachedDataType="i1"
                      cachedName="Column_singlebytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]"
                      name="Column_singlebytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_numeric]"
                      cachedDataType="numeric"
                      cachedName="Column_numeric"
                      cachedPrecision="18"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]"
                      name="Column_numeric" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_image]"
                      cachedDataType="image"
                      cachedName="Column_image"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]"
                      name="Column_image" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_fourbyteunsignedinteger]"
                      cachedDataType="ui4"
                      cachedName="Column_fourbyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]"
                      name="Column_fourbyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_fourbytesignedinteger]"
                      cachedDataType="i4"
                      cachedName="Column_fourbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]"
                      name="Column_fourbytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_float]"
                      cachedDataType="r4"
                      cachedName="Column_float"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]"
                      name="Column_float" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_filetimestamp]"
                      cachedDataType="dateTime"
                      cachedName="Column_filetimestamp"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]"
                      name="Column_filetimestamp" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_eightbyteunsignedinteger]"
                      cachedDataType="ui8"
                      cachedName="Column_eightbyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]"
                      name="Column_eightbyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_eightbytesignedinteger]"
                      cachedDataType="i8"
                      cachedName="Column_eightbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]"
                      name="Column_eightbytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_decimal]"
                      cachedDataType="decimal"
                      cachedName="Column_decimal"
                      cachedScale="2"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]"
                      name="Column_decimal" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_date]"
                      cachedDataType="date"
                      cachedName="Column_date"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]"
                      name="Column_date" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_databasetimestampwithtimezone]"
                      cachedDataType="dbTimeStampOffset"
                      cachedName="Column_databasetimestampwithtimezone"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]"
                      name="Column_databasetimestampwithtimezone" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_databasetimestampwithrecision]"
                      cachedDataType="dbTimeStamp2"
                      cachedName="Column_databasetimestampwithrecision"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]"
                      name="Column_databasetimestampwithrecision" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_databasetimestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Column_databasetimestamp"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]"
                      name="Column_databasetimestamp" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_databasetimewithprecision]"
                      cachedDataType="dbTime2"
                      cachedName="Column_databasetimewithprecision"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]"
                      name="Column_databasetimewithprecision" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_doubleprecisionfloat]"
                      cachedDataType="r8"
                      cachedName="Column_doubleprecisionfloat"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]"
                      name="Column_doubleprecisionfloat" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_databasetime]"
                      cachedDataType="dbTime"
                      cachedName="Column_databasetime"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]"
                      name="Column_databasetime" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput]"
                  description="Hashed rows are directed to this output."
                  name="HashedOutput"
                  synchronousInputId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[MD5]"
                      dataType="bytes"
                      length="16"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[MD5]"
                      name="MD5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[RipeMD160]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[RipeMD160]"
                      name="RipeMD160">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">2</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA1]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA1]"
                      name="SHA1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[Null]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[Null]"
                      name="Null">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[None]"
                      dataType="bytes"
                      length="16"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[None]"
                      name="None">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA256]"
                      dataType="bytes"
                      length="32"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA256]"
                      name="SHA256">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">4</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA384]"
                      dataType="bytes"
                      length="48"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA384]"
                      name="SHA384">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">5</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA512]"
                      dataType="bytes"
                      length="64"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA512]"
                      name="SHA512">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">6</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Multiple Hash Safe Not Thread"
              componentClassID="DTS.ManagedComponentWrapper.3"
              description="Creates Multiple Hash's from selected input columns."
              name="Multiple Hash Safe Not Thread"
              version="6">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Select the number of threads to use"
                  name="MultipleThreads"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+MultipleThread">0</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">MultipleHash</property>
                <property
                  dataType="System.Int32"
                  description="Select True to force Nulls and Empty Strings to be detected in Hash, False for earlier version compatability."
                  name="SafeNullHandling"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+SafeNullHandling">1</property>
                <property
                  dataType="System.Int32"
                  description="Select True to enable hashing of Milliseconds, False for earlier version compatability."
                  name="IncludeMillsecond"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+MillisecondHandling">0</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input]"
                  name="Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_bytestream]"
                      cachedDataType="bytes"
                      cachedLength="50"
                      cachedName="Column_bytestream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_Boolean]"
                      cachedDataType="bool"
                      cachedName="Column_Boolean"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_currency]"
                      cachedDataType="cy"
                      cachedName="Column_currency"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_databasedate]"
                      cachedDataType="dbDate"
                      cachedName="Column_databasedate"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_nullfourbytesignedinteger]"
                      cachedDataType="i4"
                      cachedName="Column_nullfourbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_uniqueidentifier]"
                      cachedDataType="guid"
                      cachedName="Column_uniqueidentifier"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_Unicodetextstream]"
                      cachedDataType="nText"
                      cachedName="Column_Unicodetextstream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_Unicodestring]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Column_Unicodestring"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_twobyteunsignedinteger]"
                      cachedDataType="ui2"
                      cachedName="Column_twobyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_twobytesignedinteger]"
                      cachedDataType="i2"
                      cachedName="Column_twobytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_textstream]"
                      cachedCodepage="1252"
                      cachedDataType="text"
                      cachedName="Column_textstream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_string]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Column_string"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_singlebyteunsignedinteger]"
                      cachedDataType="ui1"
                      cachedName="Column_singlebyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_singlebytesignedinteger]"
                      cachedDataType="i1"
                      cachedName="Column_singlebytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_numeric]"
                      cachedDataType="numeric"
                      cachedName="Column_numeric"
                      cachedPrecision="18"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_image]"
                      cachedDataType="image"
                      cachedName="Column_image"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_fourbyteunsignedinteger]"
                      cachedDataType="ui4"
                      cachedName="Column_fourbyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_fourbytesignedinteger]"
                      cachedDataType="i4"
                      cachedName="Column_fourbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_float]"
                      cachedDataType="r4"
                      cachedName="Column_float"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_filetimestamp]"
                      cachedDataType="dateTime"
                      cachedName="Column_filetimestamp"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_eightbyteunsignedinteger]"
                      cachedDataType="ui8"
                      cachedName="Column_eightbyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_eightbytesignedinteger]"
                      cachedDataType="i8"
                      cachedName="Column_eightbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_decimal]"
                      cachedDataType="decimal"
                      cachedName="Column_decimal"
                      cachedScale="2"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_date]"
                      cachedDataType="date"
                      cachedName="Column_date"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_databasetimestampwithtimezone]"
                      cachedDataType="dbTimeStampOffset"
                      cachedName="Column_databasetimestampwithtimezone"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_databasetimestampwithrecision]"
                      cachedDataType="dbTimeStamp2"
                      cachedName="Column_databasetimestampwithrecision"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_databasetimestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Column_databasetimestamp"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_databasetimewithprecision]"
                      cachedDataType="dbTime2"
                      cachedName="Column_databasetimewithprecision"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_doubleprecisionfloat]"
                      cachedDataType="r8"
                      cachedName="Column_doubleprecisionfloat"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_databasetime]"
                      cachedDataType="dbTime"
                      cachedName="Column_databasetime"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput]"
                  description="Hashed rows are directed to this output."
                  name="HashedOutput"
                  synchronousInputId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[MD5]"
                      dataType="bytes"
                      length="16"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[MD5]"
                      name="MD5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[RipeMD160]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[RipeMD160]"
                      name="RipeMD160">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">2</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA1]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA1]"
                      name="SHA1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[Null]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[Null]"
                      name="Null">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[None]"
                      dataType="bytes"
                      length="16"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[None]"
                      name="None">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA256]"
                      dataType="bytes"
                      length="32"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA256]"
                      name="SHA256">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">4</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA384]"
                      dataType="bytes"
                      length="48"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA384]"
                      name="SHA384">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">5</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA512]"
                      dataType="bytes"
                      length="64"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA512]"
                      name="SHA512">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">6</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Multiple Hash Safe On"
              componentClassID="DTS.ManagedComponentWrapper.3"
              description="Creates Multiple Hash's from selected input columns."
              localeId="3081"
              name="Multiple Hash Safe On"
              version="6">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Select the number of threads to use"
                  name="MultipleThreads"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+MultipleThread">2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">MultipleHash</property>
                <property
                  dataType="System.Int32"
                  description="Select True to force Nulls and Empty Strings to be detected in Hash, False for earlier version compatability."
                  name="SafeNullHandling"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+SafeNullHandling">1</property>
                <property
                  dataType="System.Int32"
                  description="Select True to enable hashing of Milliseconds, False for earlier version compatability."
                  name="IncludeMillsecond"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+MillisecondHandling">0</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input]"
                  name="Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_bytestream]"
                      cachedDataType="bytes"
                      cachedLength="50"
                      cachedName="Column_bytestream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]"
                      name="Column_bytestream" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_Boolean]"
                      cachedDataType="bool"
                      cachedName="Column_Boolean"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]"
                      name="Column_Boolean" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_currency]"
                      cachedDataType="cy"
                      cachedName="Column_currency"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]"
                      name="Column_currency" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_databasedate]"
                      cachedDataType="dbDate"
                      cachedName="Column_databasedate"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]"
                      name="Column_databasedate" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_nullfourbytesignedinteger]"
                      cachedDataType="i4"
                      cachedName="Column_nullfourbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]"
                      name="Column_nullfourbytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_uniqueidentifier]"
                      cachedDataType="guid"
                      cachedName="Column_uniqueidentifier"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]"
                      name="Column_uniqueidentifier" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_Unicodetextstream]"
                      cachedDataType="nText"
                      cachedName="Column_Unicodetextstream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]"
                      name="Column_Unicodetextstream" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_Unicodestring]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Column_Unicodestring"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]"
                      name="Column_Unicodestring" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_twobyteunsignedinteger]"
                      cachedDataType="ui2"
                      cachedName="Column_twobyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]"
                      name="Column_twobyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_twobytesignedinteger]"
                      cachedDataType="i2"
                      cachedName="Column_twobytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]"
                      name="Column_twobytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_textstream]"
                      cachedCodepage="1252"
                      cachedDataType="text"
                      cachedName="Column_textstream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]"
                      name="Column_textstream" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_string]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Column_string"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]"
                      name="Column_string" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_singlebyteunsignedinteger]"
                      cachedDataType="ui1"
                      cachedName="Column_singlebyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]"
                      name="Column_singlebyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_singlebytesignedinteger]"
                      cachedDataType="i1"
                      cachedName="Column_singlebytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]"
                      name="Column_singlebytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_numeric]"
                      cachedDataType="numeric"
                      cachedName="Column_numeric"
                      cachedPrecision="18"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]"
                      name="Column_numeric" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_image]"
                      cachedDataType="image"
                      cachedName="Column_image"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]"
                      name="Column_image" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_fourbyteunsignedinteger]"
                      cachedDataType="ui4"
                      cachedName="Column_fourbyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]"
                      name="Column_fourbyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_fourbytesignedinteger]"
                      cachedDataType="i4"
                      cachedName="Column_fourbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]"
                      name="Column_fourbytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_float]"
                      cachedDataType="r4"
                      cachedName="Column_float"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]"
                      name="Column_float" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_filetimestamp]"
                      cachedDataType="dateTime"
                      cachedName="Column_filetimestamp"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]"
                      name="Column_filetimestamp" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_eightbyteunsignedinteger]"
                      cachedDataType="ui8"
                      cachedName="Column_eightbyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]"
                      name="Column_eightbyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_eightbytesignedinteger]"
                      cachedDataType="i8"
                      cachedName="Column_eightbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]"
                      name="Column_eightbytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_decimal]"
                      cachedDataType="decimal"
                      cachedName="Column_decimal"
                      cachedScale="2"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]"
                      name="Column_decimal" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_date]"
                      cachedDataType="date"
                      cachedName="Column_date"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]"
                      name="Column_date" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_databasetimestampwithtimezone]"
                      cachedDataType="dbTimeStampOffset"
                      cachedName="Column_databasetimestampwithtimezone"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]"
                      name="Column_databasetimestampwithtimezone" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_databasetimestampwithrecision]"
                      cachedDataType="dbTimeStamp2"
                      cachedName="Column_databasetimestampwithrecision"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]"
                      name="Column_databasetimestampwithrecision" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_databasetimestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Column_databasetimestamp"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]"
                      name="Column_databasetimestamp" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_databasetimewithprecision]"
                      cachedDataType="dbTime2"
                      cachedName="Column_databasetimewithprecision"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]"
                      name="Column_databasetimewithprecision" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_doubleprecisionfloat]"
                      cachedDataType="r8"
                      cachedName="Column_doubleprecisionfloat"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]"
                      name="Column_doubleprecisionfloat" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_databasetime]"
                      cachedDataType="dbTime"
                      cachedName="Column_databasetime"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]"
                      name="Column_databasetime" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput]"
                  description="Hashed rows are directed to this output."
                  name="HashedOutput"
                  synchronousInputId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[MD5]"
                      dataType="bytes"
                      length="16"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[MD5]"
                      name="MD5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[RipeMD160]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[RipeMD160]"
                      name="RipeMD160">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">2</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA1]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA1]"
                      name="SHA1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[Null]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[Null]"
                      name="Null">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[None]"
                      dataType="bytes"
                      length="16"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[None]"
                      name="None">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA256]"
                      dataType="bytes"
                      length="32"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA256]"
                      name="SHA256">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">4</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA384]"
                      dataType="bytes"
                      length="48"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA384]"
                      name="SHA384">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">5</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA512]"
                      dataType="bytes"
                      length="64"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA512]"
                      name="SHA512">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">6</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread"
              componentClassID="DTS.ManagedComponentWrapper.3"
              description="Creates Multiple Hash's from selected input columns."
              localeId="3081"
              name="Multiple Hash Unsafe Not Thread"
              version="6">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Select the number of threads to use"
                  name="MultipleThreads"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+MultipleThread">0</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">MultipleHash</property>
                <property
                  dataType="System.Int32"
                  description="Select True to force Nulls and Empty Strings to be detected in Hash, False for earlier version compatability."
                  name="SafeNullHandling"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+SafeNullHandling">0</property>
                <property
                  dataType="System.Int32"
                  description="Select True to enable hashing of Milliseconds, False for earlier version compatability."
                  name="IncludeMillsecond"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+MillisecondHandling">0</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input]"
                  name="Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_bytestream]"
                      cachedDataType="bytes"
                      cachedLength="50"
                      cachedName="Column_bytestream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]"
                      name="Column_bytestream" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_Boolean]"
                      cachedDataType="bool"
                      cachedName="Column_Boolean"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]"
                      name="Column_Boolean" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_currency]"
                      cachedDataType="cy"
                      cachedName="Column_currency"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]"
                      name="Column_currency" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_databasedate]"
                      cachedDataType="dbDate"
                      cachedName="Column_databasedate"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]"
                      name="Column_databasedate" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_nullfourbytesignedinteger]"
                      cachedDataType="i4"
                      cachedName="Column_nullfourbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]"
                      name="Column_nullfourbytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_uniqueidentifier]"
                      cachedDataType="guid"
                      cachedName="Column_uniqueidentifier"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]"
                      name="Column_uniqueidentifier" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_Unicodetextstream]"
                      cachedDataType="nText"
                      cachedName="Column_Unicodetextstream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]"
                      name="Column_Unicodetextstream" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_Unicodestring]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Column_Unicodestring"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]"
                      name="Column_Unicodestring" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_twobyteunsignedinteger]"
                      cachedDataType="ui2"
                      cachedName="Column_twobyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]"
                      name="Column_twobyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_twobytesignedinteger]"
                      cachedDataType="i2"
                      cachedName="Column_twobytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]"
                      name="Column_twobytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_textstream]"
                      cachedCodepage="1252"
                      cachedDataType="text"
                      cachedName="Column_textstream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]"
                      name="Column_textstream" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_string]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Column_string"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]"
                      name="Column_string" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_singlebyteunsignedinteger]"
                      cachedDataType="ui1"
                      cachedName="Column_singlebyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]"
                      name="Column_singlebyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_singlebytesignedinteger]"
                      cachedDataType="i1"
                      cachedName="Column_singlebytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]"
                      name="Column_singlebytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_numeric]"
                      cachedDataType="numeric"
                      cachedName="Column_numeric"
                      cachedPrecision="18"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]"
                      name="Column_numeric" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_image]"
                      cachedDataType="image"
                      cachedName="Column_image"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]"
                      name="Column_image" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_fourbyteunsignedinteger]"
                      cachedDataType="ui4"
                      cachedName="Column_fourbyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]"
                      name="Column_fourbyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_fourbytesignedinteger]"
                      cachedDataType="i4"
                      cachedName="Column_fourbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]"
                      name="Column_fourbytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_float]"
                      cachedDataType="r4"
                      cachedName="Column_float"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]"
                      name="Column_float" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_filetimestamp]"
                      cachedDataType="dateTime"
                      cachedName="Column_filetimestamp"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]"
                      name="Column_filetimestamp" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_eightbyteunsignedinteger]"
                      cachedDataType="ui8"
                      cachedName="Column_eightbyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]"
                      name="Column_eightbyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_eightbytesignedinteger]"
                      cachedDataType="i8"
                      cachedName="Column_eightbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]"
                      name="Column_eightbytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_decimal]"
                      cachedDataType="decimal"
                      cachedName="Column_decimal"
                      cachedScale="2"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]"
                      name="Column_decimal" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_date]"
                      cachedDataType="date"
                      cachedName="Column_date"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]"
                      name="Column_date" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_databasetimestampwithtimezone]"
                      cachedDataType="dbTimeStampOffset"
                      cachedName="Column_databasetimestampwithtimezone"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]"
                      name="Column_databasetimestampwithtimezone" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_databasetimestampwithrecision]"
                      cachedDataType="dbTimeStamp2"
                      cachedName="Column_databasetimestampwithrecision"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]"
                      name="Column_databasetimestampwithrecision" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_databasetimestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Column_databasetimestamp"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]"
                      name="Column_databasetimestamp" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_databasetimewithprecision]"
                      cachedDataType="dbTime2"
                      cachedName="Column_databasetimewithprecision"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]"
                      name="Column_databasetimewithprecision" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_doubleprecisionfloat]"
                      cachedDataType="r8"
                      cachedName="Column_doubleprecisionfloat"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]"
                      name="Column_doubleprecisionfloat" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_databasetime]"
                      cachedDataType="dbTime"
                      cachedName="Column_databasetime"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]"
                      name="Column_databasetime" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput]"
                  description="Hashed rows are directed to this output."
                  name="HashedOutput"
                  synchronousInputId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[MD5]"
                      dataType="bytes"
                      length="16"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[MD5]"
                      name="MD5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[RipeMD160]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[RipeMD160]"
                      name="RipeMD160">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">2</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA1]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA1]"
                      name="SHA1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[Null]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[Null]"
                      name="Null">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[None]"
                      dataType="bytes"
                      length="16"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[None]"
                      name="None">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA256]"
                      dataType="bytes"
                      length="32"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA256]"
                      name="SHA256">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">4</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA384]"
                      dataType="bytes"
                      length="48"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA384]"
                      name="SHA384">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">5</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA512]"
                      dataType="bytes"
                      length="64"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA512]"
                      name="SHA512">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">6</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Script Test Safe Auto"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; Â© 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Executes a custom script."
              localeId="3081"
              name="Script Test Safe Auto"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="20">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f5b5c89c93cf47cd89c7f423da791594.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f5b5c89c93cf47cd89c7f423da791594.csproj")]
[assembly: AssemblyCopyright("Copyright @  2011")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Boolean bCancel = true;
        byte[] bMD5 = { 0x8C, 0x61, 0xE5, 0x1B, 0x19, 0x30, 0xBB, 0xBA, 0x27, 0xDE, 0xBF, 0x0F, 0x71, 0x76, 0x23, 0xBE };
        byte[] bRipeMD160 = { 0xE2, 0x73, 0xFC, 0x79, 0x34, 0xA9, 0x39, 0x52, 0xB7, 0xE2, 0xEC, 0xA8, 0x21, 0xAF, 0xE2, 0xA0, 0x7C, 0x00, 0xA3, 0x89 };
        byte[] bSHA1 = { 0x03, 0x4D, 0x8C, 0x44, 0x1A, 0xB4, 0xEF, 0xC5, 0x0C, 0xCF, 0x22, 0x3A, 0x1A, 0x3E, 0x89, 0xCE, 0x29, 0x30, 0x64, 0x3D };
        byte[] bSHA256 = { 0x34, 0xF9, 0x57, 0x00, 0x43, 0x15, 0x36, 0xC3, 0x25, 0xB3, 0xA5, 0xC6, 0xC2, 0x22, 0x98, 0x4C, 0xC2, 0x1E, 0x54, 0xA2, 0xA8, 0x26, 0xD0, 0x27, 0x44, 0x3C, 0xB4, 0x76, 0x70, 0x4B, 0xEA, 0x61 };
        byte[] bSHA384 = {0xC7,0xE8,0x4C,0x6E,0x77,0xC9,0x63,0xBE,0x9C,0x9C,0xAE,0x21,0xBA,0x54,0x66,0x62,0xEC,0x81,0x21,0x38,0x33,0xD5,0xDC,0x3E,0x1A,0xF1,0xF6,0x73,0xC5,0xB6,0x35,0xF8,0x72,0x5A,0xEC,0x26,0x1D,0xF5,0x40,0xC6,0x77,0xDD,0xB9,0x4E,0x0A,0x24,0x1C,0x47 };
        byte[] bSHA512 = { 0x72, 0x3D, 0x9F, 0x0E, 0x43, 0x67, 0x4B, 0x07, 0xC9, 0x43, 0xAF, 0xDF, 0x70, 0xA2, 0x7A, 0x75, 0x80, 0x08, 0xBB, 0x97, 0xDE, 0x5F, 0x6E, 0xA9, 0xCD, 0xA9, 0x2F, 0x1B, 0x63, 0x08, 0xEF, 0xAE, 0x4A, 0x74, 0x1B, 0xE7, 0xCC, 0x8E, 0x02, 0xD7, 0x3D, 0x7B, 0xDA, 0x78, 0x7D, 0x94, 0x7E, 0x47, 0x10, 0x31, 0x8B, 0xF9, 0xCB, 0xC0, 0xFD, 0x1D, 0x28, 0xC0, 0x4C, 0x94, 0x1D, 0xF6, 0x3D, 0x62 };
        byte[] bNone = { 0x00 };



        for (int i = 0; i < bMD5.Length; i++)
        {
            if (Row.MD5[i].CompareTo(bMD5[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "MD5 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }

        for (int i = 0; i < bRipeMD160.Length; i++)
        {
            if (Row.RipeMD160[i].CompareTo(bRipeMD160[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "RipeMD160 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }

        for (int i = 0; i < bSHA1.Length; i++)
        {
            if (Row.SHA1[i].CompareTo(bSHA1[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA1 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA256.Length; i++)
        {
            if (Row.SHA256[i].CompareTo(bSHA256[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA256 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA384.Length; i++)
        {
            if (Row.SHA384[i].CompareTo(bSHA384[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA384 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA512.Length; i++)
        {
            if (Row.SHA512[i].CompareTo(bSHA512[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA512 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bNone.Length; i++)
        {
            if (Row.ColumnNone[i].CompareTo(bNone[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "None Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
    
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Byte[] MD5
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[0]);
        }
    }
    public bool MD5_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Byte[] RipeMD160
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[1]);
        }
    }
    public bool RipeMD160_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Byte[] SHA1
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[2]);
        }
    }
    public bool SHA1_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Byte[] ColumnNull
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[3]);
        }
    }
    public bool ColumnNull_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Byte[] ColumnNone
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[4]);
        }
    }
    public bool ColumnNone_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Byte[] SHA256
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[5]);
        }
    }
    public bool SHA256_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Byte[] SHA384
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[6]);
        }
    }
    public bool SHA384_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Byte[] SHA512
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[7]);
        }
    }
    public bool SHA512_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>sc_f5b5c89c93cf47cd89c7f423da791594</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_f5b5c89c93cf47cd89c7f423da791594</msb:DisplayName>
		<msb:ProjectId>{170C09B3-9E09-46F0-B6D5-842010A33B62}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_f5b5c89c93cf47cd89c7f423da791594.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Settings.get_Default():SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Sett" +
    "ings")]

namespace SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_f5b5c89c93cf47cd89c7f423da791594.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_f5b5c89c93cf47cd89c7f423da791594.csproj</RootNamespace>
    <AssemblyName>SC_6111C4D7DE53486C9FD627A85080EFDA</AssemblyName>
    <ProjectGuid>{82C59351-4B4F-4F49-8A9C-279886F7CA7B}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_6111C4D7DE53486C9FD627A85080EFDA.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
bwg4AAQAWyEAAAAAhhglBwYABAB7IQAAAADGAPoI3gAEAKAhAAAAAMYB8wjoAAgAsyEAAAAAxgEH
CegACQC1IQAAAACGGCUH7gAKAMQhAAAAAIYYJQfuAAsA0yEAAAAAxgDSBAYADADbIQAAAADGAN0E
BgAMAOQhAAAAAMYABwnoAAwAhCQAAAAAhhglBwYADQCMJAAAAACDGCUHBgANAJQkAAAAAJMI3gb0
AA0AwCQAAAAAkwjfAvkADQDHJAAAAACTCOsC/gANAM8kAAAAAJYIewgEAQ4A1iQAAAAAhhglBwYA
DgDeJAAAAACRGCsHCQEOAAAAAQDXBgAAAgAYCAAAAwCHBgAAAQAEAgAAAgCbAgAAAwDXBgAABACH
BgAAAQDXBgAAAQAiCQAAAQCrCAAAAQCrCAAAAQAiCQAAAQDuBAkAJQcBABEAJQcGABkAJQcKACkA
JQcQADEAJQcQADkAJQcQAEEAJQcQAEkAJQcQAFEAJQcQAFkAJQcQAGEAJQcQAJEAJQcGAJkAJQcG
ALkAJQcVAMkAJQcGAGkAJQcbAGkA1wYlAGkAGAgpAHEADwgtAGkA8QUzAGkAHgk4AGkAbwg4AIEA
JQcGANkARgg8AIEALAhDAIkAJQcGAIEA0gQGAIEA3QQGAPEAJgliAOkAYwZrAIEANQJwANkAQwl2
AAkBGwd5ABEBiQKEABEBNgmNAKEAJQeTAMEAJQcGAC4ACwAlAS4AEwAuAS4AGwBNAS4AIwBWAS4A
KwCGAS4AMwCGAS4AOwCGAS4AQwBWAS4ASwCMAS4AUwCGAS4AWwCjAcMAYwDrAeEAewDrAeMAawDr
ASMBewDrASkCcwBNAUkCcwBNAQEAEAAAAAoAAQAUAAAACwABACAAAAAMAAEAMAAAAA0AAQBAAAAA
DgBJAAIAAQAHABEACAATAAAARgENAQAArwUSAQAAOwANAQAAZgUSAQAAcgANAQAAewUSAQAAVwUN
AQAA5gUSAQAAygINAQAA0AUSAQAAawENAQAAvgUSAQAAEgENAQAAnQUSAQAAewANAQAAiwUSAQAA
4gYWAQAA/wIbAQAAfwggAQIAAgADAAIAAwAFAAIABAAHAAIABQAJAAIABgALAAIABwANAAIACAAP
AAIACQARAAIACgATAAIACwAVAAIADAAXAAIADQAZAAIADgAbAAIADwAdAAIAEAAfAAIAEQAhAAIA
HwAjAAIAIAAlAAEAIQAlAAIAIgAnAFg7AAAIAJg7AAAJAMg7AAAKAOg7AAALAAA8AAAMABA8AAAN
AASAAAABAAAAAAAAAAAAAAAAAOABAAAEAAAAAAAAAAAAAACbAEsCAAAAAA0AAAAAAAAAAAAAAKQA
tQgAAAAADQAAAAAAAAAAAAAApADSCAAAAAAEAAAAAAAAAAAAAACbAPgFAAAAAA0AAAAAAAAAAAAA
AKQAkQYAAAAAAAAAAAEAAAB2BwAACgAJAAsACQAMAAkADQAJAA4ACQAAAAAAAElEVFNDb21wb25l
bnRNZXRhRGF0YTEwMABfX1N0YXRpY0FycmF5SW5pdFR5cGVTaXplPTIwAGdldF9SaXBlTUQxNjAA
OEJGQkVDMzg3MkJDMDQ3OUNBRTYyNDM1RkVCMkQ1M0UzOUIyQTU2MQBnZXRfU0hBMQBnZXRfU0hB
NTEyAF9fU3RhdGljQXJyYXlJbml0VHlwZVNpemU9MzIAM0NFRkJDNjEyMERDRDczOUJEOEE3REEw
NEQxQzNEN0U2MUIzMDA1MgA2RkVEQjYxNDIwRjY3OTRDQTVBMDY5NjIyODMwQ0Q0QjBGMDk4NDMz
AF9fU3RhdGljQXJyYXlJbml0VHlwZVNpemU9NjQAZ2V0X1NIQTM4NABCRDUxQTY4REQzQkExQUIx
RTAwNzA0NTlBRUJDN0E5RjEwRTkyMDk1AGdldF9NRDUAX19TdGF0aWNBcnJheUluaXRUeXBlU2l6
ZT0xNgBnZXRfU0hBMjU2ADE1NTc1RTQ0Q0YxRjAwNDIzRjc4NkEwQzVDNjY2QTNCMzdBNDUzOTYA
X19TdGF0aWNBcnJheUluaXRUeXBlU2l6ZT00OAA8TW9kdWxlPgA8UHJpdmF0ZUltcGxlbWVudGF0
aW9uRGV0YWlscz4AU0NfNjExMUM0RDdERTUzNDg2QzlGRDYyN0E4NTA4MEVGREEASW5wdXRJRAA2
NzkzOUIwREI1NjdBODE1OUJDQTlENjYyMjE4RjM0NDA5NjAwOERFAGdldF9Db21wb25lbnRNZXRh
RGF0YQBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAUnVudGltZUZpZWxkSGFuZGxlAFJ1bnRpbWVU
eXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5QaXBlbGluZQBnZXRfQ29sdW1uTm9uZQBWYWx1ZVR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dz
YWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVB
dHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJs
eVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENv
bXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAQnl0ZQB2YWx1
ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwA
U0NfNjExMUM0RDdERTUzNDg2QzlGRDYyN0E4NTA4MEVGREEuZGxsAGdldF9Db2x1bW5OdWxsAGdl
dF9SaXBlTUQxNjBfSXNOdWxsAGdldF9TSEExX0lzTnVsbABnZXRfU0hBNTEyX0lzTnVsbABnZXRf
U0hBMzg0X0lzTnVsbABnZXRfTUQ1X0lzTnVsbABnZXRfU0hBMjU2X0lzTnVsbABnZXRfQ29sdW1u
Tm9uZV9Jc051bGwAZ2V0X0NvbHVtbk51bGxfSXNOdWxsAFN5c3RlbQByZXNvdXJjZU1hbgBTY3Jp
cHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ29tcGFyZVRvAEN1bHR1cmVJbmZvAE91dHB1dE5h
bWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAElucHV0
MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAEZpcmVFcnJvcgAuY3RvcgAu
Y2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMA
U3lzdGVtLlJlc291cmNlcwBTQ19mNWI1Yzg5YzkzY2Y0N2NkODljN2Y0MjNkYTc5MTU5NC5jc3By
b2ouUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2Y1YjVj
ODljOTNjZjQ3Y2Q4OWM3ZjQyM2RhNzkxNTk0LmNzcHJvai5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBH
ZXRCeXRlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1
YWxzAENvbm5lY3Rpb25zAFJ1bnRpbWVIZWxwZXJzAE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVm
YXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9z
b2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJ
bnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBJbml0aWFs
aXplQXJyYXkAZ2V0X0Fzc2VtYmx5AEVtcHR5AAAAAAAPSQBuAHAAdQB0ACAAMAAATVYAYQBsAGkA
ZABhAHQAZQAgAE0AdQBsAHQAaQBwAGwAZQAgAEgAYQBzAGgAIABTAGEAZgBlACAATgBvAHQAIABU
AGgAcgBlAGEAZAAAH00ARAA1ACAASABhAHMAaAAgAGkAcwAgAEIAQQBEAAArUgBpAHAAZQBNAEQA
MQA2ADAAIABIAGEAcwBoACAAaQBzACAAQgBBAEQAACFTAEgAQQAxACAASABhAHMAaAAgAGkAcwAg
AEIAQQBEAAAlUwBIAEEAMgA1ADYAIABIAGEAcwBoACAAaQBzACAAQgBBAEQAACVTAEgAQQAzADgA
NAAgAEgAYQBzAGgAIABpAHMAIABCAEEARAAAJVMASABBADUAMQAyACAASABhAHMAaAAgAGkAcwAg
AEIAQQBEAAAhTgBvAG4AZQAgAEgAYQBzAGgAIABpAHMAIABCAEEARAAAf1MAQwBfAGYANQBiADUA
YwA4ADkAYwA5ADMAYwBmADQANwBjAGQAOAA5AGMANwBmADQAMgAzAGQAYQA3ADkAMQA1ADkANAAu
AGMAcwBwAHIAbwBqAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAA
AADMhUKOPDtQR4QMy9C/JzLCAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZCSADARI5HQgSPQMG
EjkDBh0IBSABHQUIBCABAggDIAACBiACAg4RcQUgAR0ICBgHDwIdBR0FHQUdBR0FHQUdBQgICAgI
CAgIAAIBEn0RgIEEIAEIBQUgABKAhQIGDgogBgEIDg4OCBACCAABEoCJEYCNBSAAEoCRByACAQ4S
gJEIt3pcVhk04IkIiYRdzYCAzJEDBhIQAwYSFAMGEkEDBhJRAwYSVQMGEiADBhE4AwYRNAMGETAD
BhEsAwYRKAQgAB0FCSAEAQgOEjkSPQUgAQESCAUgAQESQQQAABJRBAAAElUFAAEBElUEAAASIAMA
AAEEKAAdBQMoAAIECAASUQQIABJVBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRp
b25UaHJvd3MBCAEAAgAAAAAALwEAKlNDX2Y1YjVjODljOTNjZjQ3Y2Q4OWM3ZjQyM2RhNzkxNTk0
LmNzcHJvagAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDExAABHAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQEAQAA
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAAAoOwAAAAAAAAAAAABCOwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDsA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQcj2fDkNnSwfJQ6/f
cKJ6dYAIu5feX26pzakvG2MI765KdBvnzI4C1z172nh9lH5HEDGL+cvA/R0owEyUHfY9YsfoTG53
yWO+nJyuIbpUZmLsgSE4M9XcPhrx9nPFtjX4clrsJh31QMZ33blOCiQcRzT5VwBDFTbDJbOlxsIi
mEzCHlSiqCbQJ0Q8tHZwS+ph4nP8eTSpOVK34uyoIa/ioHwAo4kAAAAAjGHlGxkwu7on3r8PcXYj
vgNNjEQatO/FDM8iOho+ic4pMGQ9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAADAQAAAAAAAAAAAAADAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBGwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAEgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAAB+ACsAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8AZgA1AGIANQBjADgAOQBjADkAMwBjAGYANAA3AGMAZAA4ADkAYwA3AGYANAAyADMAZABhADcA
OQAxADUAOQA0AC4AYwBzAHAAcgBvAGoAAAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAA
AAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
NgAxADEAMQBDADQARAA3AEQARQA1ADMANAA4ADYAQwA5AEYARAA2ADIANwBBADgANQAwADgAMABF
AEYARABBAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAEMAXwA2ADEAMQAxAEMANABEADcARABFADUAMwA0ADgANgBDADkARgBEADYAMgA3AEEAOAA1
ADAAOAAwAEUARgBEAEEALgBkAGwAbAAAAHYAKwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBDAF8AZgA1AGIANQBjADgAOQBjADkAMwBjAGYANAA3AGMAZAA4ADkAYwA3AGYANAAyADMAZABh
ADcAOQAxADUAOQA0AC4AYwBzAHAAcgBvAGoAAAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAFQ7AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_6111c4d7de53486c9fd627a85080efda</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">9e2b61ae61a6a7c03607832565100ed9</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">6aecfd7f5cd7791f7a1ae2906044ba169f135890</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0].Columns[MD5]"
                      cachedDataType="bytes"
                      cachedLength="16"
                      cachedName="MD5"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[MD5]"
                      name="MD5" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0].Columns[RipeMD160]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="RipeMD160"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[RipeMD160]"
                      name="RipeMD160" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0].Columns[SHA1]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="SHA1"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA1]"
                      name="SHA1" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0].Columns[ColumnNull]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="Null"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[Null]"
                      name="ColumnNull" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0].Columns[ColumnNone]"
                      cachedDataType="bytes"
                      cachedLength="16"
                      cachedName="None"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[None]"
                      name="ColumnNone" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0].Columns[SHA256]"
                      cachedDataType="bytes"
                      cachedLength="32"
                      cachedName="SHA256"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA256]"
                      name="SHA256" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0].Columns[SHA384]"
                      cachedDataType="bytes"
                      cachedLength="48"
                      cachedName="SHA384"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA384]"
                      name="SHA384" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0].Columns[SHA512]"
                      cachedDataType="bytes"
                      cachedLength="64"
                      cachedName="SHA512"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA512]"
                      name="SHA512" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Data Flow Task\Script Test Safe Not Thread"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; Â© 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Executes a custom script."
              name="Script Test Safe Not Thread"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="20">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Boolean bCancel = true;
        byte[] bMD5 = { 0x8C, 0x61, 0xE5, 0x1B, 0x19, 0x30, 0xBB, 0xBA, 0x27, 0xDE, 0xBF, 0x0F, 0x71, 0x76, 0x23, 0xBE };
        byte[] bRipeMD160 = { 0xE2, 0x73, 0xFC, 0x79, 0x34, 0xA9, 0x39, 0x52, 0xB7, 0xE2, 0xEC, 0xA8, 0x21, 0xAF, 0xE2, 0xA0, 0x7C, 0x00, 0xA3, 0x89 };
        byte[] bSHA1 = { 0x03, 0x4D, 0x8C, 0x44, 0x1A, 0xB4, 0xEF, 0xC5, 0x0C, 0xCF, 0x22, 0x3A, 0x1A, 0x3E, 0x89, 0xCE, 0x29, 0x30, 0x64, 0x3D };
        byte[] bSHA256 = { 0x34, 0xF9, 0x57, 0x00, 0x43, 0x15, 0x36, 0xC3, 0x25, 0xB3, 0xA5, 0xC6, 0xC2, 0x22, 0x98, 0x4C, 0xC2, 0x1E, 0x54, 0xA2, 0xA8, 0x26, 0xD0, 0x27, 0x44, 0x3C, 0xB4, 0x76, 0x70, 0x4B, 0xEA, 0x61 };
        byte[] bSHA384 = {0xC7,0xE8,0x4C,0x6E,0x77,0xC9,0x63,0xBE,0x9C,0x9C,0xAE,0x21,0xBA,0x54,0x66,0x62,0xEC,0x81,0x21,0x38,0x33,0xD5,0xDC,0x3E,0x1A,0xF1,0xF6,0x73,0xC5,0xB6,0x35,0xF8,0x72,0x5A,0xEC,0x26,0x1D,0xF5,0x40,0xC6,0x77,0xDD,0xB9,0x4E,0x0A,0x24,0x1C,0x47 };
        byte[] bSHA512 = { 0x72, 0x3D, 0x9F, 0x0E, 0x43, 0x67, 0x4B, 0x07, 0xC9, 0x43, 0xAF, 0xDF, 0x70, 0xA2, 0x7A, 0x75, 0x80, 0x08, 0xBB, 0x97, 0xDE, 0x5F, 0x6E, 0xA9, 0xCD, 0xA9, 0x2F, 0x1B, 0x63, 0x08, 0xEF, 0xAE, 0x4A, 0x74, 0x1B, 0xE7, 0xCC, 0x8E, 0x02, 0xD7, 0x3D, 0x7B, 0xDA, 0x78, 0x7D, 0x94, 0x7E, 0x47, 0x10, 0x31, 0x8B, 0xF9, 0xCB, 0xC0, 0xFD, 0x1D, 0x28, 0xC0, 0x4C, 0x94, 0x1D, 0xF6, 0x3D, 0x62 };
        byte[] bNone = { 0x00 };



        for (int i = 0; i < bMD5.Length; i++)
        {
            if (Row.MD5[i].CompareTo(bMD5[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "MD5 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }

        for (int i = 0; i < bRipeMD160.Length; i++)
        {
            if (Row.RipeMD160[i].CompareTo(bRipeMD160[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "RipeMD160 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }

        for (int i = 0; i < bSHA1.Length; i++)
        {
            if (Row.SHA1[i].CompareTo(bSHA1[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA1 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA256.Length; i++)
        {
            if (Row.SHA256[i].CompareTo(bSHA256[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA256 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA384.Length; i++)
        {
            if (Row.SHA384[i].CompareTo(bSHA384[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA384 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA512.Length; i++)
        {
            if (Row.SHA512[i].CompareTo(bSHA512[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA512 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bNone.Length; i++)
        {
            if (Row.ColumnNone[i].CompareTo(bNone[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "None Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
    
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Byte[] MD5
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[0]);
        }
    }
    public bool MD5_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Byte[] RipeMD160
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[1]);
        }
    }
    public bool RipeMD160_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Byte[] SHA1
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[2]);
        }
    }
    public bool SHA1_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Byte[] ColumnNull
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[3]);
        }
    }
    public bool ColumnNull_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Byte[] ColumnNone
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[4]);
        }
    }
    public bool ColumnNone_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Byte[] SHA256
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[5]);
        }
    }
    public bool SHA256_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Byte[] SHA384
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[6]);
        }
    }
    public bool SHA384_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Byte[] SHA512
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[7]);
        }
    }
    public bool SHA512_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>sc_f5b5c89c93cf47cd89c7f423da791594</msb:CodeName>
		<msb:DisplayName>sc_f5b5c89c93cf47cd89c7f423da791594</msb:DisplayName>
		<msb:ProjectId>{120AE2AF-91AC-4974-A5B0-F97DA0D81E72}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_f5b5c89c93cf47cd89c7f423da791594.csproj"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Settings.get_Default():SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Sett" +
    "ings")]

namespace SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_f5b5c89c93cf47cd89c7f423da791594.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_f5b5c89c93cf47cd89c7f423da791594.csproj</RootNamespace>
    <AssemblyName>SC_f5b5c89c93cf47cd89c7f423da791594.csproj</AssemblyName>
    <ProjectGuid>{82C59351-4B4F-4F49-8A9C-279886F7CA7B}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f5b5c89c93cf47cd89c7f423da791594.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f5b5c89c93cf47cd89c7f423da791594.csproj")]
[assembly: AssemblyCopyright("Copyright @  2011")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_f5b5c89c93cf47cd89c7f423da791594.csproj.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
fQg4AAQAWyEAAAAAhhgzBwYABAB7IQAAAADGAAgJ3gAEAKAhAAAAAMYBAQnoAAgAsyEAAAAAxgEV
CegACQC1IQAAAACGGDMH7gAKAMQhAAAAAIYYMwfuAAsA0yEAAAAAxgCuBAYADADbIQAAAADGALkE
BgAMAOQhAAAAAMYAFQnoAAwAhCQAAAAAhhgzBwYADQCMJAAAAACDGDMHBgANAJQkAAAAAJMI7Ab0
AA0AwCQAAAAAkwi7AvkADQDHJAAAAACTCMcC/gANAM8kAAAAAJYIiQgEAQ4A1iQAAAAAhhgzBwYA
DgDeJAAAAACRGDkHCQEOAAAAAQDlBgAAAgAmCAAAAwCVBgAAAQDgAQAAAgB3AgAAAwDlBgAABACV
BgAAAQDlBgAAAQAwCQAAAQC5CAAAAQC5CAAAAQAwCQAAAQDKBAkAMwcBABEAMwcGABkAMwcKACkA
MwcQADEAMwcQADkAMwcQAEEAMwcQAEkAMwcQAFEAMwcQAFkAMwcQAGEAMwcQAJEAMwcGAJkAMwcG
ALkAMwcVAMkAMwcGAGkAMwcbAGkA5QYlAGkAJggpAHEAHQgtAGkA/wUzAGkALAk4AGkAfQg4AIEA
MwcGANkAVAg8AIEAOghDAIkAMwcGAIEArgQGAIEAuQQGAPEANAliAOkAcQZrAIEAEQJwANkAUQl2
AAkBKQd5ABEBZQKEABEBRAmNAKEAMweTAMEAMwcGAC4ACwAlAS4AEwAuAS4AGwBNAS4AIwBWAS4A
KwCGAS4AMwCGAS4AOwCGAS4AQwBWAS4ASwCMAS4AUwCGAS4AWwCjAcMAYwDrAeEAewDrAeMAawDr
ASMBewDrASkCcwBNAUkCcwBNAQEAEAAAAAoAAQAUAAAACwABACAAAAAMAAEAMAAAAA0AAQBAAAAA
DgBJAAIAAQAHABEACAATAAAARgENAQAAvQUSAQAAOwANAQAAdAUSAQAAcgANAQAAiQUSAQAAZQUN
AQAA9AUSAQAApgINAQAA3gUSAQAAawENAQAAzAUSAQAAEgENAQAAqwUSAQAAewANAQAAmQUSAQAA
8AYWAQAA2wIbAQAAjQggAQIAAgADAAIAAwAFAAIABAAHAAIABQAJAAIABgALAAIABwANAAIACAAP
AAIACQARAAIACgATAAIACwAVAAIADAAXAAIADQAZAAIADgAbAAIADwAdAAIAEAAfAAIAEQAhAAIA
HwAjAAIAIAAlAAEAIQAlAAIAIgAnAGQ7AAAIAKQ7AAAJANQ7AAAKAPQ7AAALAAw8AAAMABw8AAAN
AASAAAABAAAAAAAAAAAAAAAAAPEEAAAEAAAAAAAAAAAAAACbACcCAAAAAA0AAAAAAAAAAAAAAKQA
wwgAAAAADQAAAAAAAAAAAAAApADgCAAAAAAEAAAAAAAAAAAAAACbAAYGAAAAAA0AAAAAAAAAAAAA
AKQAnwYAAAAAAAAAAAEAAACEBwAACgAJAAsACQAMAAkADQAJAA4ACQAAAAAAAElEVFNDb21wb25l
bnRNZXRhRGF0YTEwMABfX1N0YXRpY0FycmF5SW5pdFR5cGVTaXplPTIwAGdldF9SaXBlTUQxNjAA
OEJGQkVDMzg3MkJDMDQ3OUNBRTYyNDM1RkVCMkQ1M0UzOUIyQTU2MQBnZXRfU0hBMQBnZXRfU0hB
NTEyAF9fU3RhdGljQXJyYXlJbml0VHlwZVNpemU9MzIAM0NFRkJDNjEyMERDRDczOUJEOEE3REEw
NEQxQzNEN0U2MUIzMDA1MgA2RkVEQjYxNDIwRjY3OTRDQTVBMDY5NjIyODMwQ0Q0QjBGMDk4NDMz
AF9fU3RhdGljQXJyYXlJbml0VHlwZVNpemU9NjQAZ2V0X1NIQTM4NABCRDUxQTY4REQzQkExQUIx
RTAwNzA0NTlBRUJDN0E5RjEwRTkyMDk1AGdldF9NRDUAX19TdGF0aWNBcnJheUluaXRUeXBlU2l6
ZT0xNgBnZXRfU0hBMjU2ADE1NTc1RTQ0Q0YxRjAwNDIzRjc4NkEwQzVDNjY2QTNCMzdBNDUzOTYA
X19TdGF0aWNBcnJheUluaXRUeXBlU2l6ZT00OAA8TW9kdWxlPgA8UHJpdmF0ZUltcGxlbWVudGF0
aW9uRGV0YWlscz4ASW5wdXRJRAA2NzkzOUIwREI1NjdBODE1OUJDQTlENjYyMjE4RjM0NDA5NjAw
OERFAGdldF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAUnVudGlt
ZUZpZWxkSGFuZGxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFt
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBnZXRfQ29sdW1uTm9uZQBWYWx1ZVR5
cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0
dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUA
UG9zdEV4ZWN1dGUAQnl0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBT
Q19mNWI1Yzg5YzkzY2Y0N2NkODljN2Y0MjNkYTc5MTU5NC5jc3Byb2oAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAFNDX2Y1YjVjODljOTNjZjQ3Y2Q4OWM3ZjQyM2RhNzkxNTk0LmNzcHJvai5kbGwAZ2V0
X0NvbHVtbk51bGwAZ2V0X1JpcGVNRDE2MF9Jc051bGwAZ2V0X1NIQTFfSXNOdWxsAGdldF9TSEE1
MTJfSXNOdWxsAGdldF9TSEEzODRfSXNOdWxsAGdldF9NRDVfSXNOdWxsAGdldF9TSEEyNTZfSXNO
dWxsAGdldF9Db2x1bW5Ob25lX0lzTnVsbABnZXRfQ29sdW1uTnVsbF9Jc051bGwAU3lzdGVtAHJl
c291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6
YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AU3RyaW5nQ29tcGFyaXNvbgBDb21wYXJlVG8AQ3VsdHVy
ZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBl
bGluZVdyYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVz
b3VyY2VNYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIARmly
ZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2Y1YjVjODljOTNjZjQ3Y2Q4OWM3ZjQy
M2RhNzkxNTk0LmNzcHJvai5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5n
TW9kZXMAU0NfZjViNWM4OWM5M2NmNDdjZDg5YzdmNDIzZGE3OTE1OTQuY3Nwcm9qLlByb3BlcnRp
ZXMAVmFyaWFibGVzAEdldEJ5dGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhl
cwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAUnVudGltZUhlbHBlcnMAT2JqZWN0AEVuZE9m
Um93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENv
bXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
UGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBO
ZXh0Um93AEluaXRpYWxpemVBcnJheQBnZXRfQXNzZW1ibHkARW1wdHkAAAAPSQBuAHAAdQB0ACAA
MAAATVYAYQBsAGkAZABhAHQAZQAgAE0AdQBsAHQAaQBwAGwAZQAgAEgAYQBzAGgAIABTAGEAZgBl
ACAATgBvAHQAIABUAGgAcgBlAGEAZAAAH00ARAA1ACAASABhAHMAaAAgAGkAcwAgAEIAQQBEAAAr
UgBpAHAAZQBNAEQAMQA2ADAAIABIAGEAcwBoACAAaQBzACAAQgBBAEQAACFTAEgAQQAxACAASABh
AHMAaAAgAGkAcwAgAEIAQQBEAAAlUwBIAEEAMgA1ADYAIABIAGEAcwBoACAAaQBzACAAQgBBAEQA
ACVTAEgAQQAzADgANAAgAEgAYQBzAGgAIABpAHMAIABCAEEARAAAJVMASABBADUAMQAyACAASABh
AHMAaAAgAGkAcwAgAEIAQQBEAAAhTgBvAG4AZQAgAEgAYQBzAGgAIABpAHMAIABCAEEARAAAf1MA
QwBfAGYANQBiADUAYwA4ADkAYwA5ADMAYwBmADQANwBjAGQAOAA5AGMANwBmADQAMgAzAGQAYQA3
ADkAMQA1ADkANAAuAGMAcwBwAHIAbwBqAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAAACq0VRPo16RRpInia2kJMUNAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZ
CSADARI5HQgSPQMGEjkDBh0IBSABHQUIBCABAggDIAACBiACAg4RcQUgAR0ICBgHDwIdBR0FHQUd
BR0FHQUdBQgICAgICAgIAAIBEn0RgIEEIAEIBQUgABKAhQIGDgogBgEIDg4OCBACCAABEoCJEYCN
BSAAEoCRByACAQ4SgJEIt3pcVhk04IkIiYRdzYCAzJEDBhIQAwYSFAMGEkEDBhJRAwYSVQMGEiAD
BhE4AwYRNAMGETADBhEsAwYRKAQgAB0FCSAEAQgOEjkSPQUgAQESCAUgAQESQQQAABJRBAAAElUF
AAEBElUEAAASIAMAAAEEKAAdBQMoAAIECAASUQQIABJVBAgAEiAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAALwEAKlNDX2Y1YjVjODljOTNjZjQ3Y2Q4OWM3
ZjQyM2RhNzkxNTk0LmNzcHJvagAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDExAABHAQAaLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJh
bWV3b3JrIDQEAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAA0OwAAAAAAAAAAAABOOwAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAQDsAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
cj2fDkNnSwfJQ6/fcKJ6dYAIu5feX26pzakvG2MI765KdBvnzI4C1z172nh9lH5HEDGL+cvA/R0o
wEyUHfY9YsfoTG53yWO+nJyuIbpUZmLsgSE4M9XcPhrx9nPFtjX4clrsJh31QMZ33blOCiQcRzT5
VwBDFTbDJbOlxsIimEzCHlSiqCbQJ0Q8tHZwS+ph4nP8eTSpOVK34uyoIa/ioHwAo4kAAAAAjGHl
Gxkwu7on3r8PcXYjvgNNjEQatO/FDM8iOho+ic4pMGQ9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAALAQAAAAAAAAAAAAALAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBIwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAGgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAAB+ACsAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8AZgA1AGIANQBjADgAOQBjADkAMwBjAGYANAA3AGMAZAA4ADkAYwA3AGYANAAyADMAZABhADcA
OQAxADUAOQA0AC4AYwBzAHAAcgBvAGoAAAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAA
AAAAMQAuADAALgAwAC4AMAAAAH4ALwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
ZgA1AGIANQBjADgAOQBjADkAMwBjAGYANAA3AGMAZAA4ADkAYwA3AGYANAAyADMAZABhADcAOQAx
ADUAOQA0AC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkA
cgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQAxAAAAKgABAAEATABl
AGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAACGAC8AAQBPAHIAaQBnAGkAbgBhAGwA
RgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AZgA1AGIANQBjADgAOQBjADkAMwBjAGYANAA3AGMAZAA4
ADkAYwA3AGYANAAyADMAZABhADcAOQAxADUAOQA0AC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAA
dgArAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBmADUAYgA1AGMAOAA5AGMAOQAz
AGMAZgA0ADcAYwBkADgAOQBjADcAZgA0ADIAMwBkAGEANwA5ADEANQA5ADQALgBjAHMAcAByAG8A
agAAAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAA
ADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAGA7AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_f5b5c89c93cf47cd89c7f423da791594</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">9e2b61ae61a6a7c03607832565100ed9</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">6aecfd7f5cd7791f7a1ae2906044ba169f135890</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0].Columns[MD5]"
                      cachedDataType="bytes"
                      cachedLength="16"
                      cachedName="MD5"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[MD5]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0].Columns[RipeMD160]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="RipeMD160"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[RipeMD160]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0].Columns[SHA1]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="SHA1"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA1]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0].Columns[ColumnNull]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="Null"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[Null]"
                      name="ColumnNull" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0].Columns[ColumnNone]"
                      cachedDataType="bytes"
                      cachedLength="16"
                      cachedName="None"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[None]"
                      name="ColumnNone" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0].Columns[SHA256]"
                      cachedDataType="bytes"
                      cachedLength="32"
                      cachedName="SHA256"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA256]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0].Columns[SHA384]"
                      cachedDataType="bytes"
                      cachedLength="48"
                      cachedName="SHA384"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA384]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0].Columns[SHA512]"
                      cachedDataType="bytes"
                      cachedLength="64"
                      cachedName="SHA512"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA512]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Data Flow Task\Script Test Safe On"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; Â© 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Executes a custom script."
              localeId="3081"
              name="Script Test Safe On"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="20">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f5b5c89c93cf47cd89c7f423da791594.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f5b5c89c93cf47cd89c7f423da791594.csproj")]
[assembly: AssemblyCopyright("Copyright @  2011")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Boolean bCancel = true;
        byte[] bMD5 = { 0x8C, 0x61, 0xE5, 0x1B, 0x19, 0x30, 0xBB, 0xBA, 0x27, 0xDE, 0xBF, 0x0F, 0x71, 0x76, 0x23, 0xBE };
        byte[] bRipeMD160 = { 0xE2, 0x73, 0xFC, 0x79, 0x34, 0xA9, 0x39, 0x52, 0xB7, 0xE2, 0xEC, 0xA8, 0x21, 0xAF, 0xE2, 0xA0, 0x7C, 0x00, 0xA3, 0x89 };
        byte[] bSHA1 = { 0x03, 0x4D, 0x8C, 0x44, 0x1A, 0xB4, 0xEF, 0xC5, 0x0C, 0xCF, 0x22, 0x3A, 0x1A, 0x3E, 0x89, 0xCE, 0x29, 0x30, 0x64, 0x3D };
        byte[] bSHA256 = { 0x34, 0xF9, 0x57, 0x00, 0x43, 0x15, 0x36, 0xC3, 0x25, 0xB3, 0xA5, 0xC6, 0xC2, 0x22, 0x98, 0x4C, 0xC2, 0x1E, 0x54, 0xA2, 0xA8, 0x26, 0xD0, 0x27, 0x44, 0x3C, 0xB4, 0x76, 0x70, 0x4B, 0xEA, 0x61 };
        byte[] bSHA384 = {0xC7,0xE8,0x4C,0x6E,0x77,0xC9,0x63,0xBE,0x9C,0x9C,0xAE,0x21,0xBA,0x54,0x66,0x62,0xEC,0x81,0x21,0x38,0x33,0xD5,0xDC,0x3E,0x1A,0xF1,0xF6,0x73,0xC5,0xB6,0x35,0xF8,0x72,0x5A,0xEC,0x26,0x1D,0xF5,0x40,0xC6,0x77,0xDD,0xB9,0x4E,0x0A,0x24,0x1C,0x47 };
        byte[] bSHA512 = { 0x72, 0x3D, 0x9F, 0x0E, 0x43, 0x67, 0x4B, 0x07, 0xC9, 0x43, 0xAF, 0xDF, 0x70, 0xA2, 0x7A, 0x75, 0x80, 0x08, 0xBB, 0x97, 0xDE, 0x5F, 0x6E, 0xA9, 0xCD, 0xA9, 0x2F, 0x1B, 0x63, 0x08, 0xEF, 0xAE, 0x4A, 0x74, 0x1B, 0xE7, 0xCC, 0x8E, 0x02, 0xD7, 0x3D, 0x7B, 0xDA, 0x78, 0x7D, 0x94, 0x7E, 0x47, 0x10, 0x31, 0x8B, 0xF9, 0xCB, 0xC0, 0xFD, 0x1D, 0x28, 0xC0, 0x4C, 0x94, 0x1D, 0xF6, 0x3D, 0x62 };
        byte[] bNone = { 0x00 };



        for (int i = 0; i < bMD5.Length; i++)
        {
            if (Row.MD5[i].CompareTo(bMD5[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "MD5 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }

        for (int i = 0; i < bRipeMD160.Length; i++)
        {
            if (Row.RipeMD160[i].CompareTo(bRipeMD160[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "RipeMD160 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }

        for (int i = 0; i < bSHA1.Length; i++)
        {
            if (Row.SHA1[i].CompareTo(bSHA1[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA1 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA256.Length; i++)
        {
            if (Row.SHA256[i].CompareTo(bSHA256[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA256 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA384.Length; i++)
        {
            if (Row.SHA384[i].CompareTo(bSHA384[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA384 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA512.Length; i++)
        {
            if (Row.SHA512[i].CompareTo(bSHA512[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA512 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bNone.Length; i++)
        {
            if (Row.ColumnNone[i].CompareTo(bNone[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "None Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
    
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Byte[] MD5
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[0]);
        }
    }
    public bool MD5_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Byte[] RipeMD160
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[1]);
        }
    }
    public bool RipeMD160_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Byte[] SHA1
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[2]);
        }
    }
    public bool SHA1_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Byte[] ColumnNull
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[3]);
        }
    }
    public bool ColumnNull_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Byte[] ColumnNone
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[4]);
        }
    }
    public bool ColumnNone_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Byte[] SHA256
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[5]);
        }
    }
    public bool SHA256_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Byte[] SHA384
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[6]);
        }
    }
    public bool SHA384_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Byte[] SHA512
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[7]);
        }
    }
    public bool SHA512_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>sc_f5b5c89c93cf47cd89c7f423da791594</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_f5b5c89c93cf47cd89c7f423da791594</msb:DisplayName>
		<msb:ProjectId>{3E6C9643-72EC-4D06-A78A-A94E68592AC5}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_f5b5c89c93cf47cd89c7f423da791594.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Settings.get_Default():SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Sett" +
    "ings")]

namespace SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_f5b5c89c93cf47cd89c7f423da791594.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_f5b5c89c93cf47cd89c7f423da791594.csproj</RootNamespace>
    <AssemblyName>SC_1833C06DDAB443E0ABBE2AC53CA043E9</AssemblyName>
    <ProjectGuid>{82C59351-4B4F-4F49-8A9C-279886F7CA7B}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_1833C06DDAB443E0ABBE2AC53CA043E9.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
bwg4AAQAWyEAAAAAhhglBwYABAB7IQAAAADGAPoI3gAEAKAhAAAAAMYB8wjoAAgAsyEAAAAAxgEH
CegACQC1IQAAAACGGCUH7gAKAMQhAAAAAIYYJQfuAAsA0yEAAAAAxgDSBAYADADbIQAAAADGAN0E
BgAMAOQhAAAAAMYABwnoAAwAhCQAAAAAhhglBwYADQCMJAAAAACDGCUHBgANAJQkAAAAAJMI3gb0
AA0AwCQAAAAAkwjfAvkADQDHJAAAAACTCOsC/gANAM8kAAAAAJYIewgEAQ4A1iQAAAAAhhglBwYA
DgDeJAAAAACRGCsHCQEOAAAAAQDXBgAAAgAYCAAAAwCHBgAAAQAEAgAAAgCbAgAAAwDXBgAABACH
BgAAAQDXBgAAAQAiCQAAAQCrCAAAAQCrCAAAAQAiCQAAAQDuBAkAJQcBABEAJQcGABkAJQcKACkA
JQcQADEAJQcQADkAJQcQAEEAJQcQAEkAJQcQAFEAJQcQAFkAJQcQAGEAJQcQAJEAJQcGAJkAJQcG
ALkAJQcVAMkAJQcGAGkAJQcbAGkA1wYlAGkAGAgpAHEADwgtAGkA8QUzAGkAHgk4AGkAbwg4AIEA
JQcGANkARgg8AIEALAhDAIkAJQcGAIEA0gQGAIEA3QQGAPEAJgliAOkAYwZrAIEANQJwANkAQwl2
AAkBGwd5ABEBiQKEABEBNgmNAKEAJQeTAMEAJQcGAC4ACwAlAS4AEwAuAS4AGwBNAS4AIwBWAS4A
KwCGAS4AMwCGAS4AOwCGAS4AQwBWAS4ASwCMAS4AUwCGAS4AWwCjAcMAYwDrAeEAewDrAeMAawDr
ASMBewDrASkCcwBNAUkCcwBNAQEAEAAAAAoAAQAUAAAACwABACAAAAAMAAEAMAAAAA0AAQBAAAAA
DgBJAAIAAQAHABEACAATAAAARgENAQAArwUSAQAAOwANAQAAZgUSAQAAcgANAQAAewUSAQAAVwUN
AQAA5gUSAQAAygINAQAA0AUSAQAAawENAQAAvgUSAQAAEgENAQAAnQUSAQAAewANAQAAiwUSAQAA
4gYWAQAA/wIbAQAAfwggAQIAAgADAAIAAwAFAAIABAAHAAIABQAJAAIABgALAAIABwANAAIACAAP
AAIACQARAAIACgATAAIACwAVAAIADAAXAAIADQAZAAIADgAbAAIADwAdAAIAEAAfAAIAEQAhAAIA
HwAjAAIAIAAlAAEAIQAlAAIAIgAnAFg7AAAIAJg7AAAJAMg7AAAKAOg7AAALAAA8AAAMABA8AAAN
AASAAAABAAAAAAAAAAAAAAAAALgBAAAEAAAAAAAAAAAAAACbAEsCAAAAAA0AAAAAAAAAAAAAAKQA
tQgAAAAADQAAAAAAAAAAAAAApADSCAAAAAAEAAAAAAAAAAAAAACbAPgFAAAAAA0AAAAAAAAAAAAA
AKQAkQYAAAAAAAAAAAEAAAB2BwAACgAJAAsACQAMAAkADQAJAA4ACQAAAAAAAElEVFNDb21wb25l
bnRNZXRhRGF0YTEwMABfX1N0YXRpY0FycmF5SW5pdFR5cGVTaXplPTIwAGdldF9SaXBlTUQxNjAA
OEJGQkVDMzg3MkJDMDQ3OUNBRTYyNDM1RkVCMkQ1M0UzOUIyQTU2MQBnZXRfU0hBMQBnZXRfU0hB
NTEyAF9fU3RhdGljQXJyYXlJbml0VHlwZVNpemU9MzIAM0NFRkJDNjEyMERDRDczOUJEOEE3REEw
NEQxQzNEN0U2MUIzMDA1MgA2RkVEQjYxNDIwRjY3OTRDQTVBMDY5NjIyODMwQ0Q0QjBGMDk4NDMz
AF9fU3RhdGljQXJyYXlJbml0VHlwZVNpemU9NjQAZ2V0X1NIQTM4NABCRDUxQTY4REQzQkExQUIx
RTAwNzA0NTlBRUJDN0E5RjEwRTkyMDk1AGdldF9NRDUAX19TdGF0aWNBcnJheUluaXRUeXBlU2l6
ZT0xNgBnZXRfU0hBMjU2ADE1NTc1RTQ0Q0YxRjAwNDIzRjc4NkEwQzVDNjY2QTNCMzdBNDUzOTYA
X19TdGF0aWNBcnJheUluaXRUeXBlU2l6ZT00OABTQ18xODMzQzA2RERBQjQ0M0UwQUJCRTJBQzUz
Q0EwNDNFOQA8TW9kdWxlPgA8UHJpdmF0ZUltcGxlbWVudGF0aW9uRGV0YWlscz4ASW5wdXRJRAA2
NzkzOUIwREI1NjdBODE1OUJDQTlENjYyMjE4RjM0NDA5NjAwOERFAGdldF9Db21wb25lbnRNZXRh
RGF0YQBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAUnVudGltZUZpZWxkSGFuZGxlAFJ1bnRpbWVU
eXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5QaXBlbGluZQBnZXRfQ29sdW1uTm9uZQBWYWx1ZVR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dz
YWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVB
dHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJs
eVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENv
bXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAQnl0ZQB2YWx1
ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwA
U0NfMTgzM0MwNkREQUI0NDNFMEFCQkUyQUM1M0NBMDQzRTkuZGxsAGdldF9Db2x1bW5OdWxsAGdl
dF9SaXBlTUQxNjBfSXNOdWxsAGdldF9TSEExX0lzTnVsbABnZXRfU0hBNTEyX0lzTnVsbABnZXRf
U0hBMzg0X0lzTnVsbABnZXRfTUQ1X0lzTnVsbABnZXRfU0hBMjU2X0lzTnVsbABnZXRfQ29sdW1u
Tm9uZV9Jc051bGwAZ2V0X0NvbHVtbk51bGxfSXNOdWxsAFN5c3RlbQByZXNvdXJjZU1hbgBTY3Jp
cHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ29tcGFyZVRvAEN1bHR1cmVJbmZvAE91dHB1dE5h
bWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAElucHV0
MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAEZpcmVFcnJvcgAuY3RvcgAu
Y2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMA
U3lzdGVtLlJlc291cmNlcwBTQ19mNWI1Yzg5YzkzY2Y0N2NkODljN2Y0MjNkYTc5MTU5NC5jc3By
b2ouUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2Y1YjVj
ODljOTNjZjQ3Y2Q4OWM3ZjQyM2RhNzkxNTk0LmNzcHJvai5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBH
ZXRCeXRlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1
YWxzAENvbm5lY3Rpb25zAFJ1bnRpbWVIZWxwZXJzAE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVm
YXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9z
b2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJ
bnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBJbml0aWFs
aXplQXJyYXkAZ2V0X0Fzc2VtYmx5AEVtcHR5AAAAAAAPSQBuAHAAdQB0ACAAMAAATVYAYQBsAGkA
ZABhAHQAZQAgAE0AdQBsAHQAaQBwAGwAZQAgAEgAYQBzAGgAIABTAGEAZgBlACAATgBvAHQAIABU
AGgAcgBlAGEAZAAAH00ARAA1ACAASABhAHMAaAAgAGkAcwAgAEIAQQBEAAArUgBpAHAAZQBNAEQA
MQA2ADAAIABIAGEAcwBoACAAaQBzACAAQgBBAEQAACFTAEgAQQAxACAASABhAHMAaAAgAGkAcwAg
AEIAQQBEAAAlUwBIAEEAMgA1ADYAIABIAGEAcwBoACAAaQBzACAAQgBBAEQAACVTAEgAQQAzADgA
NAAgAEgAYQBzAGgAIABpAHMAIABCAEEARAAAJVMASABBADUAMQAyACAASABhAHMAaAAgAGkAcwAg
AEIAQQBEAAAhTgBvAG4AZQAgAEgAYQBzAGgAIABpAHMAIABCAEEARAAAf1MAQwBfAGYANQBiADUA
YwA4ADkAYwA5ADMAYwBmADQANwBjAGQAOAA5AGMANwBmADQAMgAzAGQAYQA3ADkAMQA1ADkANAAu
AGMAcwBwAHIAbwBqAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAA
AAB+K9MCWVq5QKb2Kz/N6RKaAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZCSADARI5HQgSPQMG
EjkDBh0IBSABHQUIBCABAggDIAACBiACAg4RcQUgAR0ICBgHDwIdBR0FHQUdBR0FHQUdBQgICAgI
CAgIAAIBEn0RgIEEIAEIBQUgABKAhQIGDgogBgEIDg4OCBACCAABEoCJEYCNBSAAEoCRByACAQ4S
gJEIt3pcVhk04IkIiYRdzYCAzJEDBhIQAwYSFAMGEkEDBhJRAwYSVQMGEiADBhE4AwYRNAMGETAD
BhEsAwYRKAQgAB0FCSAEAQgOEjkSPQUgAQESCAUgAQESQQQAABJRBAAAElUFAAEBElUEAAASIAMA
AAEEKAAdBQMoAAIECAASUQQIABJVBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRp
b25UaHJvd3MBCAEAAgAAAAAALwEAKlNDX2Y1YjVjODljOTNjZjQ3Y2Q4OWM3ZjQyM2RhNzkxNTk0
LmNzcHJvagAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDExAABHAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQEAQAA
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAAAoOwAAAAAAAAAAAABCOwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDsA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQcj2fDkNnSwfJQ6/f
cKJ6dYAIu5feX26pzakvG2MI765KdBvnzI4C1z172nh9lH5HEDGL+cvA/R0owEyUHfY9YsfoTG53
yWO+nJyuIbpUZmLsgSE4M9XcPhrx9nPFtjX4clrsJh31QMZ33blOCiQcRzT5VwBDFTbDJbOlxsIi
mEzCHlSiqCbQJ0Q8tHZwS+ph4nP8eTSpOVK34uyoIa/ioHwAo4kAAAAAjGHlGxkwu7on3r8PcXYj
vgNNjEQatO/FDM8iOho+ic4pMGQ9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAADAQAAAAAAAAAAAAADAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBGwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAEgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAAB+ACsAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8AZgA1AGIANQBjADgAOQBjADkAMwBjAGYANAA3AGMAZAA4ADkAYwA3AGYANAAyADMAZABhADcA
OQAxADUAOQA0AC4AYwBzAHAAcgBvAGoAAAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAA
AAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
MQA4ADMAMwBDADAANgBEAEQAQQBCADQANAAzAEUAMABBAEIAQgBFADIAQQBDADUAMwBDAEEAMAA0
ADMARQA5AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAEMAXwAxADgAMwAzAEMAMAA2AEQARABBAEIANAA0ADMARQAwAEEAQgBCAEUAMgBBAEMANQAz
AEMAQQAwADQAMwBFADkALgBkAGwAbAAAAHYAKwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBDAF8AZgA1AGIANQBjADgAOQBjADkAMwBjAGYANAA3AGMAZAA4ADkAYwA3AGYANAAyADMAZABh
ADcAOQAxADUAOQA0AC4AYwBzAHAAcgBvAGoAAAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAFQ7AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_1833c06ddab443e0abbe2ac53ca043e9</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">9e2b61ae61a6a7c03607832565100ed9</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">6aecfd7f5cd7791f7a1ae2906044ba169f135890</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0].Columns[MD5]"
                      cachedDataType="bytes"
                      cachedLength="16"
                      cachedName="MD5"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[MD5]"
                      name="MD5" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0].Columns[RipeMD160]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="RipeMD160"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[RipeMD160]"
                      name="RipeMD160" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0].Columns[SHA1]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="SHA1"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA1]"
                      name="SHA1" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0].Columns[ColumnNull]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="Null"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[Null]"
                      name="ColumnNull" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0].Columns[ColumnNone]"
                      cachedDataType="bytes"
                      cachedLength="16"
                      cachedName="None"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[None]"
                      name="ColumnNone" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0].Columns[SHA256]"
                      cachedDataType="bytes"
                      cachedLength="32"
                      cachedName="SHA256"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA256]"
                      name="SHA256" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0].Columns[SHA384]"
                      cachedDataType="bytes"
                      cachedLength="48"
                      cachedName="SHA384"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA384]"
                      name="SHA384" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0].Columns[SHA512]"
                      cachedDataType="bytes"
                      cachedLength="64"
                      cachedName="SHA512"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA512]"
                      name="SHA512" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Data Flow Task\Script Test UnSafe Not Threaded"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; Â© 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Executes a custom script."
              localeId="3081"
              name="Script Test UnSafe Not Threaded"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="20">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f5b5c89c93cf47cd89c7f423da791594.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f5b5c89c93cf47cd89c7f423da791594.csproj")]
[assembly: AssemblyCopyright("Copyright @  2011")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Boolean bCancel = true;
        byte[] bMD5 = { 0x56, 0x08, 0xA3, 0x54, 0x11, 0x97, 0x69, 0x67, 0xE3, 0x3F, 0x8A, 0xC5, 0x9E, 0x69, 0x88, 0x3D };
        byte[] bRipeMD160 = { 0x82, 0x3D, 0xB3, 0x4B, 0x03, 0x2C, 0x1F, 0xDB, 0x09, 0xCE, 0x48, 0x96, 0x2B, 0xF7, 0x2D, 0x4B, 0xD1, 0x6F, 0x97, 0x1A };
        byte[] bSHA1 = { 0xB1, 0x15, 0xB0, 0x36, 0x27, 0xC1, 0xB7, 0x44, 0x9B, 0x1A, 0x7E, 0x58, 0xDE, 0x96, 0x2B, 0x86, 0x7A, 0xC6, 0xE2, 0xDF };
        byte[] bSHA256 = { 0x75, 0xD1, 0x23, 0x24, 0x3A, 0xB3, 0x76, 0xF3, 0xE4, 0x46, 0x47, 0xCE, 0xA7, 0x34, 0x91, 0xB8, 0xE7, 0xBF, 0xFC, 0xB2, 0xFD, 0xDF, 0x0F, 0x5D, 0x5C, 0x64, 0x9E, 0xBB, 0x30, 0x54, 0xA9, 0x50 };
        byte[] bSHA384 = { 0x9C, 0xDE, 0x12, 0x33, 0xD7, 0x90, 0xB4, 0xA5, 0x38, 0xEC, 0xFE, 0x6B, 0xE1, 0xEF, 0x53, 0x75, 0x90, 0x4D, 0xEE, 0xF6, 0x11, 0xD0, 0x1A, 0x1A, 0x00, 0x38, 0x6D, 0x35, 0x4E, 0xBC, 0x4D, 0x11, 0x49, 0xB6, 0xE7, 0xB3, 0x3D, 0x95, 0x97, 0x00, 0x3E, 0x4D, 0xD2, 0x78, 0xA3, 0x3C, 0xAD, 0x7B };
        byte[] bSHA512 = { 0x53, 0x4F, 0xC9, 0x84, 0x65, 0x64, 0xC5, 0x23, 0xC7, 0x50, 0xA9, 0x1D, 0x39, 0x27, 0x0F, 0x41, 0x53, 0xA6, 0x0E, 0x28, 0xBA, 0x45, 0x70, 0xAC, 0x1A, 0x69, 0xBF, 0xDF, 0x79, 0x93, 0x1A, 0xCE, 0x3D, 0x6A, 0x2B, 0x8A, 0x92, 0xB9, 0xDC, 0xD1, 0xA6, 0xB7, 0x66, 0x84, 0x30, 0xFD, 0x38, 0x56, 0x32, 0xD7, 0xB6, 0x4F, 0xAB, 0x63, 0x4D, 0x9B, 0x71, 0x5D, 0xD7, 0x79, 0xDD, 0xE7, 0x3E, 0x9D };
        byte[] bNone = { 0x00 };
        byte[] bNull = { 0xDA, 0x39, 0xA3, 0xEE, 0x5E, 0x6B, 0x4B, 0x0D, 0x32, 0x55, 0xBF, 0xEF, 0x95, 0x60, 0x18, 0x90, 0xAF, 0xD8, 0x07, 0x09 };



        for (int i = 0; i < bMD5.Length; i++)
        {
            if (Row.MD5[i].CompareTo(bMD5[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "MD5 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }

        for (int i = 0; i < bRipeMD160.Length; i++)
        {
            if (Row.RipeMD160[i].CompareTo(bRipeMD160[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "RipeMD160 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }

        for (int i = 0; i < bSHA1.Length; i++)
        {
            if (Row.SHA1[i].CompareTo(bSHA1[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA1 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA256.Length; i++)
        {
            if (Row.SHA256[i].CompareTo(bSHA256[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA256 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA384.Length; i++)
        {
            if (Row.SHA384[i].CompareTo(bSHA384[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA384 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA512.Length; i++)
        {
            if (Row.SHA512[i].CompareTo(bSHA512[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA512 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bNone.Length; i++)
        {
            if (Row.ColumnNone[i].CompareTo(bNone[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "None Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bNull.Length; i++)
        {
            if (Row.ColumnNull[i].CompareTo(bNull[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "Null Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
    
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Byte[] MD5
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[0]);
        }
    }
    public bool MD5_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Byte[] RipeMD160
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[1]);
        }
    }
    public bool RipeMD160_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Byte[] SHA1
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[2]);
        }
    }
    public bool SHA1_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Byte[] ColumnNull
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[3]);
        }
    }
    public bool ColumnNull_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Byte[] ColumnNone
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[4]);
        }
    }
    public bool ColumnNone_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Byte[] SHA256
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[5]);
        }
    }
    public bool SHA256_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Byte[] SHA384
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[6]);
        }
    }
    public bool SHA384_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Byte[] SHA512
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[7]);
        }
    }
    public bool SHA512_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>sc_f5b5c89c93cf47cd89c7f423da791594</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_f5b5c89c93cf47cd89c7f423da791594</msb:DisplayName>
		<msb:ProjectId>{0F145E6D-F110-428F-9931-3149A33C9588}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_f5b5c89c93cf47cd89c7f423da791594.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Settings.get_Default():SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Sett" +
    "ings")]

namespace SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_f5b5c89c93cf47cd89c7f423da791594.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_f5b5c89c93cf47cd89c7f423da791594.csproj</RootNamespace>
    <AssemblyName>SC_DD467AE2AFEA4C88B8DACDECC4B84E57</AssemblyName>
    <ProjectGuid>{82C59351-4B4F-4F49-8A9C-279886F7CA7B}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_DD467AE2AFEA4C88B8DACDECC4B84E57.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AACGCOwA3AAEAAYhAAAAAIYI4wU4AAQADyEAAAAAhgi8ANwABAAkIQAAAACGCMIFOAAEAC0hAAAA
AIYITgDcAAQAQiEAAAAAhgiwBTgABABLIQAAAACGAEcJOAAEAFMhAAAAAIYAmAg4AAQAWyEAAAAA
hhhOBwYABAB7IQAAAADGACMJ4QAEAKAhAAAAAMYBHAnrAAgAsyEAAAAAxgEwCesACQC1IQAAAACG
GE4H8QAKAMQhAAAAAIYYTgfxAAsA0yEAAAAAxgD7BAYADADbIQAAAADGAAYFBgAMAOQhAAAAAMYA
MAnrAAwA5SQAAAAAhhhOBwYADQDtJAAAAACDGE4HBgANAPUkAAAAAJMIBwf3AA0AISUAAAAAkwgI
A/wADQAoJQAAAACTCBQDAQENADAlAAAAAJYIpAgHAQ4ANyUAAAAAhhhOBwYADgA/JQAAAACRGFQH
DAEOAAAAAQAABwAAAgBBCAAAAwCwBgAAAQAEAgAAAgDEAgAAAwAABwAABACwBgAAAQAABwAAAQBL
CQAAAQDUCAAAAQDUCAAAAQBLCQAAAQAXBQkATgcBABEATgcGABkATgcKACkATgcQADEATgcQADkA
TgcQAEEATgcQAEkATgcQAFEATgcQAFkATgcQAGEATgcQAJEATgcGAJkATgcGALkATgcVAMkATgcG
AGkATgcbAGkAAAclAGkAQQgpAHEAOAgtAGkAGgYzAGkARwk4AGkAmAg4AIEATgcGANkAbwg8AIEA
VQhDAIkATgcGAIEA+wQGAIEABgUGAPEATwllAOkAjAZuAIEAXgJzANkAbAl5AAkBRAd8ABEBsgKH
ABEBXwmQAKEATgeWAMEATgcGAC4ACwAoAS4AEwAxAS4AGwBQAS4AIwBZAS4AKwCJAS4AMwCJAS4A
OwCJAS4AQwBZAS4ASwCPAS4AUwCJAS4AWwCmAcMAYwDuAeEAewDuAeMAawDuASMBewDuASkCcwBQ
AUkCcwBQAQEAEAAAAAoAAQAUAAAACwABACAAAAAMAAEAMAAAAA0AAQBAAAAADgBJAAIAAQAHABEA
CAATAAAAywAQAQAA2AUVAQAAOwAQAQAAjwUVAQAASQAQAQAApAUVAQAAgAUQAQAADwYVAQAA8wIQ
AQAA+QUVAQAA8AAQAQAA5wUVAQAAwAAQAQAAxgUVAQAAUgAQAQAAtAUVAQAACwcZAQAAKAMeAQAA
qAgjAQIAAgADAAIAAwAFAAIABAAHAAIABQAJAAIABgALAAIABwANAAIACAAPAAIACQARAAIACgAT
AAIACwAVAAIADAAXAAIADQAZAAIADgAbAAIADwAdAAIAEAAfAAIAEQAhAAIAHwAjAAIAIAAlAAEA
IQAlAAIAIgAnABA8AAAIACg8AAAJAFg8AAAKAHA8AAALAIA8AAAMAMA8AAANAOA8AAAOAASAAAAB
AAAAAAAAAAAAAAAAACABAAAEAAAAAAAAAAAAAACeAHQCAAAAAA0AAAAAAAAAAAAAAKcA3ggAAAAA
DQAAAAAAAAAAAAAApwD7CAAAAAAEAAAAAAAAAAAAAACeACEGAAAAAA0AAAAAAAAAAAAAAKcAugYA
AAAAAAAAAAEAAACfBwAACgAJAAsACQAMAAkADQAJAA4ACQAAAAAAAElEVFNDb21wb25lbnRNZXRh
RGF0YTEwMABfX1N0YXRpY0FycmF5SW5pdFR5cGVTaXplPTIwAGdldF9SaXBlTUQxNjAAZ2V0X1NI
QTEAZ2V0X1NIQTUxMgBfX1N0YXRpY0FycmF5SW5pdFR5cGVTaXplPTMyADkwRTU0QUNERDI2MkY0
RTZFMjM0QTQ0MjI1RDMxQ0EwN0NEQzI2QjIAX19TdGF0aWNBcnJheUluaXRUeXBlU2l6ZT02NABn
ZXRfU0hBMzg0AGdldF9NRDUAX19TdGF0aWNBcnJheUluaXRUeXBlU2l6ZT0xNgBnZXRfU0hBMjU2
ADcyRDJCMjk1MjUxQzI5QzMxMTMxRUM3MkY0NURFNDgzMEU1MjdGOTYAU0NfREQ0NjdBRTJBRkVB
NEM4OEI4REFDREVDQzRCODRFNTcAX19TdGF0aWNBcnJheUluaXRUeXBlU2l6ZT00OABCRTFCREVD
MEFBNzRCNERDQjA3OTk0M0U3MDUyODA5NkNDQTk4NUY4ADxNb2R1bGU+ADxQcml2YXRlSW1wbGVt
ZW50YXRpb25EZXRhaWxzPgA4NjJDOUNDODZDOUUwMTFCRDY5ODhGMjlBRjYxQTA2OTk3M0ZFRUNB
ADI1MTdGQTlGQkRFMThDRjY2NkY3OTVDQTlBMzBDMDU0NDM5RTIzMkQASW5wdXRJRAAwN0RGNTYw
Q0U2MjI4QzFEODQyNDY4MDVCNEQ1NDY3QkE0MkJBNzRFAEJBNkY4NTdCRkZCNTI3REJBQ0UyOTBD
MkE4NkM3OUExQTlGNDYzNUUAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAGRlZmF1bHRJ
bnN0YW5jZQBSdW50aW1lRmllbGRIYW5kbGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21I
YW5kbGUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAGdldF9Db2x1
bW5Ob25lAFZhbHVlVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUA
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBCeXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcAU3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19ERDQ2N0FFMkFGRUE0Qzg4QjhE
QUNERUNDNEI4NEU1Ny5kbGwAZ2V0X0NvbHVtbk51bGwAZ2V0X1JpcGVNRDE2MF9Jc051bGwAZ2V0
X1NIQTFfSXNOdWxsAGdldF9TSEE1MTJfSXNOdWxsAGdldF9TSEEzODRfSXNOdWxsAGdldF9NRDVf
SXNOdWxsAGdldF9TSEEyNTZfSXNOdWxsAGdldF9Db2x1bW5Ob25lX0lzTnVsbABnZXRfQ29sdW1u
TnVsbF9Jc051bGwAU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3Vy
YXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AU3RyaW5nQ29tcGFy
aXNvbgBDb21wYXJlVG8AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9z
b2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVy
AFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlBpcGVsaW5lLldyYXBwZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3Rp
Y3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2Y1
YjVjODljOTNjZjQ3Y2Q4OWM3ZjQyM2RhNzkxNTk0LmNzcHJvai5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfZjViNWM4OWM5M2NmNDdjZDg5YzdmNDIzZGE3
OTE1OTQuY3Nwcm9qLlByb3BlcnRpZXMAVmFyaWFibGVzAEdldEJ5dGVzAEJ1ZmZlckNvbHVtbklu
ZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAUnVudGlt
ZUhlbHBlcnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFy
ZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5w
dXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AEluaXRpYWxpemVBcnJheQBnZXRfQXNzZW1ibHkA
RW1wdHkAAAAAD0kAbgBwAHUAdAAgADAAAE1WAGEAbABpAGQAYQB0AGUAIABNAHUAbAB0AGkAcABs
AGUAIABIAGEAcwBoACAAUwBhAGYAZQAgAE4AbwB0ACAAVABoAHIAZQBhAGQAAB9NAEQANQAgAEgA
YQBzAGgAIABpAHMAIABCAEEARAAAK1IAaQBwAGUATQBEADEANgAwACAASABhAHMAaAAgAGkAcwAg
AEIAQQBEAAAhUwBIAEEAMQAgAEgAYQBzAGgAIABpAHMAIABCAEEARAAAJVMASABBADIANQA2ACAA
SABhAHMAaAAgAGkAcwAgAEIAQQBEAAAlUwBIAEEAMwA4ADQAIABIAGEAcwBoACAAaQBzACAAQgBB
AEQAACVTAEgAQQA1ADEAMgAgAEgAYQBzAGgAIABpAHMAIABCAEEARAAAIU4AbwBuAGUAIABIAGEA
cwBoACAAaQBzACAAQgBBAEQAACFOAHUAbABsACAASABhAHMAaAAgAGkAcwAgAEIAQQBEAAB/UwBD
AF8AZgA1AGIANQBjADgAOQBjADkAMwBjAGYANAA3AGMAZAA4ADkAYwA3AGYANAAyADMAZABhADcA
OQAxADUAOQA0AC4AYwBzAHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1
AHIAYwBlAHMAAADNybhG1s4xT4b7Yk8WEow3AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZCSAD
ARI5HQgSPQMGEjkDBh0IBSABHQUIBCABAggDIAACBiACAg4RcQUgAR0ICBsHEQIdBR0FHQUdBR0F
HQUdBR0FCAgICAgICAgIAAIBEn0RgIEEIAEIBQUgABKAhQIGDgogBgEIDg4OCBACCAABEoCJEYCN
BSAAEoCRByACAQ4SgJEIt3pcVhk04IkIiYRdzYCAzJEDBhIQAwYSFAMGEkEDBhJRAwYSVQMGEiAD
BhEsAwYRNAMGESgDBhE4AwYRMAQgAB0FCSAEAQgOEjkSPQUgAQESCAUgAQESQQQAABJRBAAAElUF
AAEBElUEAAASIAMAAAEEKAAdBQMoAAIECAASUQQIABJVBAgAEiAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAALwEAKlNDX2Y1YjVjODljOTNjZjQ3Y2Q4OWM3
ZjQyM2RhNzkxNTk0LmNzcHJvagAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDExAABHAQAaLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJh
bWV3b3JrIDQEAQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA4DsAAAAAAAAAAAAA+jsAAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAOw7AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EII9s0sDLB/bCc5Iliv3LUvRb5caAAAAAJzeEjPXkLSlOOz+a+HvU3WQTe72EdAaGgA4bTVOvE0R
Sbbnsz2VlwA+TdJ4ozyte7EVsDYnwbdEmxp+WN6WK4Z6xuLfAAAAAFYIo1QRl2ln4z+KxZ5piD1T
T8mEZWTFI8dQqR05Jw9BU6YOKLpFcKwaab/feZMazj1qK4qSudzRprdmhDD9OFYy17ZPq2NNm3Fd
13nd5z6dddEjJDqzdvPkRkfOpzSRuOe//LL93w9dXGSeuzBUqVDaOaPuXmtLDTJVv++VYBiQr9gH
CQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAADAQAAAAAAAAAAAAADAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBGwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAEgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAAB+ACsAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8AZgA1AGIANQBjADgAOQBjADkAMwBjAGYANAA3AGMAZAA4ADkAYwA3AGYANAAyADMAZABhADcA
OQAxADUAOQA0AC4AYwBzAHAAcgBvAGoAAAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAA
AAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
RABEADQANgA3AEEARQAyAEEARgBFAEEANABDADgAOABCADgARABBAEMARABFAEMAQwA0AEIAOAA0
AEUANQA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAEMAXwBEAEQANAA2ADcAQQBFADIAQQBGAEUAQQA0AEMAOAA4AEIAOABEAEEAQwBEAEUAQwBD
ADQAQgA4ADQARQA1ADcALgBkAGwAbAAAAHYAKwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBDAF8AZgA1AGIANQBjADgAOQBjADkAMwBjAGYANAA3AGMAZAA4ADkAYwA3AGYANAAyADMAZABh
ADcAOQAxADUAOQA0AC4AYwBzAHAAcgBvAGoAAAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAAw8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_dd467ae2afea4c88b8dacdecc4b84e57</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">9e2b61ae61a6a7c03607832565100ed9</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">6aecfd7f5cd7791f7a1ae2906044ba169f135890</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0].Columns[MD5]"
                      cachedDataType="bytes"
                      cachedLength="16"
                      cachedName="MD5"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[MD5]"
                      name="MD5" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0].Columns[RipeMD160]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="RipeMD160"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[RipeMD160]"
                      name="RipeMD160" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0].Columns[SHA1]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="SHA1"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA1]"
                      name="SHA1" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0].Columns[ColumnNull]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="Null"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[Null]"
                      name="ColumnNull" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0].Columns[ColumnNone]"
                      cachedDataType="bytes"
                      cachedLength="16"
                      cachedName="None"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[None]"
                      name="ColumnNone" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0].Columns[SHA256]"
                      cachedDataType="bytes"
                      cachedLength="32"
                      cachedName="SHA256"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA256]"
                      name="SHA256" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0].Columns[SHA384]"
                      cachedDataType="bytes"
                      cachedLength="48"
                      cachedName="SHA384"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA384]"
                      name="SHA384" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0].Columns[SHA512]"
                      cachedDataType="bytes"
                      cachedLength="64"
                      cachedName="SHA512"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA512]"
                      name="SHA512" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[GeneratedData]"
              endId="Package\Data Flow Task\Multicast.Inputs[Multicast Input 1]"
              name="GeneratedData"
              startId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData]" />
            <path
              refId="Package\Data Flow Task.Paths[HashedOutput]"
              endId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0]"
              name="HashedOutput"
              startId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput]" />
            <path
              refId="Package\Data Flow Task.Paths[HashedOutput1]"
              endId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0]"
              name="HashedOutput"
              startId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput]" />
            <path
              refId="Package\Data Flow Task.Paths[HashedOutput2]"
              endId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0]"
              name="HashedOutput"
              startId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput]" />
            <path
              refId="Package\Data Flow Task.Paths[HashedOutput3]"
              endId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0]"
              name="HashedOutput"
              startId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput]" />
            <path
              refId="Package\Data Flow Task.Paths[Multicast Output 1]"
              endId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input]"
              name="Multicast Output 1"
              startId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Multicast Output 2]"
              endId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input]"
              name="Multicast Output 2"
              startId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Data Flow Task.Paths[Multicast Output 3]"
              endId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input]"
              name="Multicast Output 3"
              startId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 3]" />
            <path
              refId="Package\Data Flow Task.Paths[Multicast Output 4]"
              endId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input]"
              name="Multicast Output 4"
              startId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 4]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task"
          TopLeft="5.5,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Multiple Hash Safe Auto"
          TopLeft="160.141509433962,168.820754716981" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Multiple Hash Safe On"
          TopLeft="469.424528301887,168.820754716981" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Multiple Hash Unsafe Not Thread"
          TopLeft="314.783018867925,168.820754716981" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Script Test UnSafe Not Threaded"
          TopLeft="321.990566037736,268.179245283019" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Multicast"
          TopLeft="237.462264150943,87.1603773584906" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Script Test Safe Not Thread"
          TopLeft="5.68867924528303,266.292452830189" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Script Test Safe Auto"
          TopLeft="174.216981132075,260.179245283019" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Multiple Hash Safe Not Thread"
          TopLeft="5.5,168.820754716981" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Generate Every Data Type"
          TopLeft="237.462264150943,5.5" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Script Test Safe On"
          TopLeft="474.745283018868,264.179245283019" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[HashedOutput2]"
          TopLeft="537.311320754717,212.745283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="5.32075471698124,51.4339622641509"
              Start="0,0"
              End="5.32075471698124,43.9339622641509">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.6981132075472" />
                  <mssgle:LineSegment
                    End="5.32075471698124,25.6981132075472" />
                  <mssgle:LineSegment
                    End="5.32075471698124,43.9339622641509" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[HashedOutput1]"
          TopLeft="228.028301886792,212.745283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="14.0754716981132,47.4339622641509"
              Start="0,0"
              End="14.0754716981132,39.9339622641509">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.6981132075472" />
                  <mssgle:LineSegment
                    End="14.0754716981132,23.6981132075472" />
                  <mssgle:LineSegment
                    End="14.0754716981132,39.9339622641509" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[HashedOutput]"
          TopLeft="73.3867924528302,212.745283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0.188679245283026,53.5471698113207"
              Start="0,0"
              End="0.188679245283026,46.0471698113207">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.7547169811321" />
                  <mssgle:LineSegment
                    End="0.188679245283026,26.7547169811321" />
                  <mssgle:LineSegment
                    End="0.188679245283026,46.0471698113207" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[GeneratedData]"
          TopLeft="305.349056603774,49.4245283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.7358490566038"
              Start="0,0"
              End="0,30.2358490566038">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.2358490566038" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Multicast Output 4]"
          TopLeft="284.594339622641,131.084905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-56.566037735849,37.7358490566038"
              Start="0,0"
              End="-56.566037735849,30.2358490566038">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.8679245283019" />
                  <mssgle:LineSegment
                    End="-56.566037735849,18.8679245283019" />
                  <mssgle:LineSegment
                    End="-56.566037735849,30.2358490566038" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Multicast Output 3]"
          TopLeft="326.103773584906,131.084905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="56.5660377358491,37.7358490566038"
              Start="0,0"
              End="56.5660377358491,30.2358490566038">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.8679245283019" />
                  <mssgle:LineSegment
                    End="56.5660377358491,18.8679245283019" />
                  <mssgle:LineSegment
                    End="56.5660377358491,30.2358490566038" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Multicast Output 2]"
          TopLeft="346.858490566038,131.084905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="190.452830188679,37.7358490566038"
              Start="0,0"
              End="190.452830188679,30.2358490566038">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.5660377358491" />
                  <mssgle:LineSegment
                    End="190.452830188679,12.5660377358491" />
                  <mssgle:LineSegment
                    End="190.452830188679,30.2358490566038" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Multicast Output 1]"
          TopLeft="263.839622641509,131.084905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-190.452830188679,37.7358490566038"
              Start="0,0"
              End="-190.452830188679,30.2358490566038">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.5660377358491" />
                  <mssgle:LineSegment
                    End="-190.452830188679,12.5660377358491" />
                  <mssgle:LineSegment
                    End="-190.452830188679,30.2358490566038" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[HashedOutput3]"
          TopLeft="382.669811320755,212.745283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="7.20754716981133,55.4339622641509"
              Start="0,0"
              End="7.20754716981133,47.9339622641509">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.6981132075472" />
                  <mssgle:LineSegment
                    End="7.20754716981133,27.6981132075472" />
                  <mssgle:LineSegment
                    End="7.20754716981133,47.9339622641509" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>